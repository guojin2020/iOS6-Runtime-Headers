/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator6.0.sdk/System/Library/PrivateFrameworks/WebKit.framework/WebKit
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class WebFramePrivate;

@interface WebFrame : NSObject  {
    WebFramePrivate *_private;
}

+ (id)stringWithData:(id)arg1 textEncodingName:(id)arg2;
+ (void)_createMainFrameWithSimpleHTMLDocumentWithPage:(struct Page { struct HashMap<WTF::AtomicString, WTF::OwnPtr<WebCore::Supplement<WebCore::Page>>, WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<WTF::OwnPtr<WebCore::Supplement<WebCore::Page>>> > { struct HashTable<WTF::AtomicString, std::__1::pair<WTF::AtomicString, WTF::OwnPtr<WebCore::Supplement<WebCore::Page>>>, WTF::PairFirstExtractor<std::__1::pair<WTF::AtomicString, WTF::OwnPtr<WebCore::Supplement<WebCore::Page>>>>, WTF::AtomicStringHash, WTF::HashMapValueTraits<WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<WTF::OwnPtr<WebCore::Supplement<WebCore::Page>>>>, WTF::HashTraits<WTF::AtomicString> > { struct pair<WTF::AtomicString, WTF::OwnPtr<WebCore::Supplement<WebCore::Page>> > {} *x_1_2_1; int x_1_2_2; int x_1_2_3; int x_1_2_4; int x_1_2_5; } x_1_1_1; } x1; struct OwnPtr<WTF::HashSet<WTF::RefPtr<WebCore::SchedulePair>, WebCore::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WebCore::SchedulePair>>> > { struct HashSet<WTF::RefPtr<WebCore::SchedulePair>, WebCore::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WebCore::SchedulePair>> > {} *x_2_1_1; } x2; struct OwnPtr<WebCore::Chrome> { struct Chrome {} *x_3_1_1; } x3; struct OwnPtr<WebCore::DragCaretController> { struct DragCaretController {} *x_4_1_1; } x4; struct OwnPtr<WebCore::FocusController> { struct FocusController {} *x_5_1_1; } x5; struct OwnPtr<WebCore::InspectorController> { struct InspectorController {} *x_6_1_1; } x6; struct RefPtr<WebCore::ScrollingCoordinator> { struct ScrollingCoordinator {} *x_7_1_1; } x7; struct OwnPtr<WebCore::Settings> { struct Settings {} *x_8_1_1; } x8; struct OwnPtr<WebCore::ProgressTracker> { struct ProgressTracker {} *x_9_1_1; } x9; struct OwnPtr<WebCore::BackForwardController> { struct BackForwardController {} *x_10_1_1; } x10; struct RefPtr<WebCore::Frame> { struct Frame {} *x_11_1_1; } x11; struct RefPtr<WebCore::PluginData> { struct PluginData {} *x_12_1_1; } x12; struct RefPtr<WebCore::RenderTheme> { struct RenderTheme {} *x_13_1_1; } x13; struct EditorClient {} *x14; int x15; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_2_1; } x_16_1_1; } x16; boolx17; boolx18; boolx19; unsigned int x20; boolx21; boolx22; boolx23; float x24; float x25; float x26; struct Pagination { int x_27_1_1; boolx_27_1_2; unsigned int x_27_1_3; unsigned int x_27_1_4; } x27; boolx28; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_2_1; } x_29_1_1; } x29; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_2_1; } x_30_1_1; } x30; boolx31; int x32; struct OwnPtr<WebCore::PageGroup> { struct PageGroup {} *x_33_1_1; } x33; struct PageGroup {} *x34; struct Debugger {} *x35; double x36; int x37; boolx38; struct RefPtr<WebCore::StorageNamespace> { struct StorageNamespace {} *x_39_1_1; } x39; int x40; double x41; boolx42; boolx43; unsigned int x44; struct HashSet<WebCore::RenderObject *, WTF::PtrHash<WebCore::RenderObject *>, WTF::HashTraits<WebCore::RenderObject *> > { struct HashTable<WebCore::RenderObject *, WebCore::RenderObject *, WTF::IdentityExtractor, WTF::PtrHash<WebCore::RenderObject *>, WTF::HashTraits<WebCore::RenderObject *>, WTF::HashTraits<WebCore::RenderObject *> > { struct RenderObject {} **x_1_2_1; int x_1_2_2; int x_1_2_3; int x_1_2_4; int x_1_2_5; } x_45_1_1; } x45; struct Region { struct IntRect { struct IntPoint { int x_1_3_1; int x_1_3_2; } x_1_2_1; struct IntSize { int x_2_3_1; int x_2_3_2; } x_1_2_2; } x_46_1_1; struct Shape { struct Vector<int, 32> { unsigned int x_1_3_1; struct VectorBuffer<int, 32> { int *x_2_4_1; unsigned int x_2_4_2; struct AlignedBuffer<128, 4> { BOOL x_3_5_1[128]; } x_2_4_3; } x_1_3_2; } x_2_2_1; struct Vector<WebCore::Region::Span, 16> { unsigned int x_2_3_1; struct VectorBuffer<WebCore::Region::Span, 16> { struct Span {} *x_2_4_1; unsigned int x_2_4_2; struct AlignedBuffer<128, 4> { BOOL x_3_5_1[128]; } x_2_4_3; } x_2_3_2; } x_2_2_2; } x_46_1_2; } x46; struct Region { struct IntRect { struct IntPoint { int x_1_3_1; int x_1_3_2; } x_1_2_1; struct IntSize { int x_2_3_1; int x_2_3_2; } x_1_2_2; } x_47_1_1; struct Shape { struct Vector<int, 32> { unsigned int x_1_3_1; struct VectorBuffer<int, 32> { int *x_2_4_1; unsigned int x_2_4_2; struct AlignedBuffer<128, 4> { BOOL x_3_5_1[128]; } x_2_4_3; } x_1_3_2; } x_2_2_1; struct Vector<WebCore::Region::Span, 16> { unsigned int x_2_3_1; struct VectorBuffer<WebCore::Region::Span, 16> { struct Span {} *x_2_4_1; unsigned int x_2_4_2; struct AlignedBuffer<128, 4> { BOOL x_3_5_1[128]; } x_2_4_3; } x_2_3_2; } x_2_2_2; } x_47_1_2; } x47; boolx48; struct AlternativeTextClient {} *x49; boolx50; }*)arg1 frameView:(id)arg2 style:(id)arg3;
+ (struct PassRefPtr<WebCore::Frame> { struct Frame {} *x1; })_createSubframeWithOwnerElement:(struct HTMLFrameOwnerElement { int (**x1)(); struct Weak<WebCore::JSDOMWrapper> { struct WeakImpl {} *x_2_1_1; } x2; int (**x3)(); struct ContainerNode {} *x4; int x5; unsigned int x6; struct Document {} *x7; struct Node {} *x8; struct Node {} *x9; struct RenderObject {} *x10; struct Node {} *x11; struct Node {} *x12; struct QualifiedName { struct QualifiedNameImpl {} *x_13_1_1; } x13; struct OwnPtr<WebCore::ElementAttributeData> { struct ElementAttributeData {} *x_14_1_1; } x14; struct Frame {} *x15; int x16; }*)arg1 frameName:(const struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_1_1; } x1; }*)arg2 frameView:(id)arg3;
+ (void)_createMainFrameWithPage:(struct Page { struct HashMap<WTF::AtomicString, WTF::OwnPtr<WebCore::Supplement<WebCore::Page>>, WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<WTF::OwnPtr<WebCore::Supplement<WebCore::Page>>> > { struct HashTable<WTF::AtomicString, std::__1::pair<WTF::AtomicString, WTF::OwnPtr<WebCore::Supplement<WebCore::Page>>>, WTF::PairFirstExtractor<std::__1::pair<WTF::AtomicString, WTF::OwnPtr<WebCore::Supplement<WebCore::Page>>>>, WTF::AtomicStringHash, WTF::HashMapValueTraits<WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<WTF::OwnPtr<WebCore::Supplement<WebCore::Page>>>>, WTF::HashTraits<WTF::AtomicString> > { struct pair<WTF::AtomicString, WTF::OwnPtr<WebCore::Supplement<WebCore::Page>> > {} *x_1_2_1; int x_1_2_2; int x_1_2_3; int x_1_2_4; int x_1_2_5; } x_1_1_1; } x1; struct OwnPtr<WTF::HashSet<WTF::RefPtr<WebCore::SchedulePair>, WebCore::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WebCore::SchedulePair>>> > { struct HashSet<WTF::RefPtr<WebCore::SchedulePair>, WebCore::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WebCore::SchedulePair>> > {} *x_2_1_1; } x2; struct OwnPtr<WebCore::Chrome> { struct Chrome {} *x_3_1_1; } x3; struct OwnPtr<WebCore::DragCaretController> { struct DragCaretController {} *x_4_1_1; } x4; struct OwnPtr<WebCore::FocusController> { struct FocusController {} *x_5_1_1; } x5; struct OwnPtr<WebCore::InspectorController> { struct InspectorController {} *x_6_1_1; } x6; struct RefPtr<WebCore::ScrollingCoordinator> { struct ScrollingCoordinator {} *x_7_1_1; } x7; struct OwnPtr<WebCore::Settings> { struct Settings {} *x_8_1_1; } x8; struct OwnPtr<WebCore::ProgressTracker> { struct ProgressTracker {} *x_9_1_1; } x9; struct OwnPtr<WebCore::BackForwardController> { struct BackForwardController {} *x_10_1_1; } x10; struct RefPtr<WebCore::Frame> { struct Frame {} *x_11_1_1; } x11; struct RefPtr<WebCore::PluginData> { struct PluginData {} *x_12_1_1; } x12; struct RefPtr<WebCore::RenderTheme> { struct RenderTheme {} *x_13_1_1; } x13; struct EditorClient {} *x14; int x15; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_2_1; } x_16_1_1; } x16; boolx17; boolx18; boolx19; unsigned int x20; boolx21; boolx22; boolx23; float x24; float x25; float x26; struct Pagination { int x_27_1_1; boolx_27_1_2; unsigned int x_27_1_3; unsigned int x_27_1_4; } x27; boolx28; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_2_1; } x_29_1_1; } x29; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_2_1; } x_30_1_1; } x30; boolx31; int x32; struct OwnPtr<WebCore::PageGroup> { struct PageGroup {} *x_33_1_1; } x33; struct PageGroup {} *x34; struct Debugger {} *x35; double x36; int x37; boolx38; struct RefPtr<WebCore::StorageNamespace> { struct StorageNamespace {} *x_39_1_1; } x39; int x40; double x41; boolx42; boolx43; unsigned int x44; struct HashSet<WebCore::RenderObject *, WTF::PtrHash<WebCore::RenderObject *>, WTF::HashTraits<WebCore::RenderObject *> > { struct HashTable<WebCore::RenderObject *, WebCore::RenderObject *, WTF::IdentityExtractor, WTF::PtrHash<WebCore::RenderObject *>, WTF::HashTraits<WebCore::RenderObject *>, WTF::HashTraits<WebCore::RenderObject *> > { struct RenderObject {} **x_1_2_1; int x_1_2_2; int x_1_2_3; int x_1_2_4; int x_1_2_5; } x_45_1_1; } x45; struct Region { struct IntRect { struct IntPoint { int x_1_3_1; int x_1_3_2; } x_1_2_1; struct IntSize { int x_2_3_1; int x_2_3_2; } x_1_2_2; } x_46_1_1; struct Shape { struct Vector<int, 32> { unsigned int x_1_3_1; struct VectorBuffer<int, 32> { int *x_2_4_1; unsigned int x_2_4_2; struct AlignedBuffer<128, 4> { BOOL x_3_5_1[128]; } x_2_4_3; } x_1_3_2; } x_2_2_1; struct Vector<WebCore::Region::Span, 16> { unsigned int x_2_3_1; struct VectorBuffer<WebCore::Region::Span, 16> { struct Span {} *x_2_4_1; unsigned int x_2_4_2; struct AlignedBuffer<128, 4> { BOOL x_3_5_1[128]; } x_2_4_3; } x_2_3_2; } x_2_2_2; } x_46_1_2; } x46; struct Region { struct IntRect { struct IntPoint { int x_1_3_1; int x_1_3_2; } x_1_2_1; struct IntSize { int x_2_3_1; int x_2_3_2; } x_1_2_2; } x_47_1_1; struct Shape { struct Vector<int, 32> { unsigned int x_1_3_1; struct VectorBuffer<int, 32> { int *x_2_4_1; unsigned int x_2_4_2; struct AlignedBuffer<128, 4> { BOOL x_3_5_1[128]; } x_2_4_3; } x_1_3_2; } x_2_2_1; struct Vector<WebCore::Region::Span, 16> { unsigned int x_2_3_1; struct VectorBuffer<WebCore::Region::Span, 16> { struct Span {} *x_2_4_1; unsigned int x_2_4_2; struct AlignedBuffer<128, 4> { BOOL x_3_5_1[128]; } x_2_4_3; } x_2_3_2; } x_2_2_2; } x_47_1_2; } x47; boolx48; struct AlternativeTextClient {} *x49; boolx50; }*)arg1 frameName:(const struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_1_1; } x1; }*)arg2 frameView:(id)arg3;
+ (struct PassRefPtr<WebCore::Frame> { struct Frame {} *x1; })_createFrameWithPage:(struct Page { struct HashMap<WTF::AtomicString, WTF::OwnPtr<WebCore::Supplement<WebCore::Page>>, WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<WTF::OwnPtr<WebCore::Supplement<WebCore::Page>>> > { struct HashTable<WTF::AtomicString, std::__1::pair<WTF::AtomicString, WTF::OwnPtr<WebCore::Supplement<WebCore::Page>>>, WTF::PairFirstExtractor<std::__1::pair<WTF::AtomicString, WTF::OwnPtr<WebCore::Supplement<WebCore::Page>>>>, WTF::AtomicStringHash, WTF::HashMapValueTraits<WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<WTF::OwnPtr<WebCore::Supplement<WebCore::Page>>>>, WTF::HashTraits<WTF::AtomicString> > { struct pair<WTF::AtomicString, WTF::OwnPtr<WebCore::Supplement<WebCore::Page>> > {} *x_1_2_1; int x_1_2_2; int x_1_2_3; int x_1_2_4; int x_1_2_5; } x_1_1_1; } x1; struct OwnPtr<WTF::HashSet<WTF::RefPtr<WebCore::SchedulePair>, WebCore::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WebCore::SchedulePair>>> > { struct HashSet<WTF::RefPtr<WebCore::SchedulePair>, WebCore::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WebCore::SchedulePair>> > {} *x_2_1_1; } x2; struct OwnPtr<WebCore::Chrome> { struct Chrome {} *x_3_1_1; } x3; struct OwnPtr<WebCore::DragCaretController> { struct DragCaretController {} *x_4_1_1; } x4; struct OwnPtr<WebCore::FocusController> { struct FocusController {} *x_5_1_1; } x5; struct OwnPtr<WebCore::InspectorController> { struct InspectorController {} *x_6_1_1; } x6; struct RefPtr<WebCore::ScrollingCoordinator> { struct ScrollingCoordinator {} *x_7_1_1; } x7; struct OwnPtr<WebCore::Settings> { struct Settings {} *x_8_1_1; } x8; struct OwnPtr<WebCore::ProgressTracker> { struct ProgressTracker {} *x_9_1_1; } x9; struct OwnPtr<WebCore::BackForwardController> { struct BackForwardController {} *x_10_1_1; } x10; struct RefPtr<WebCore::Frame> { struct Frame {} *x_11_1_1; } x11; struct RefPtr<WebCore::PluginData> { struct PluginData {} *x_12_1_1; } x12; struct RefPtr<WebCore::RenderTheme> { struct RenderTheme {} *x_13_1_1; } x13; struct EditorClient {} *x14; int x15; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_2_1; } x_16_1_1; } x16; boolx17; boolx18; boolx19; unsigned int x20; boolx21; boolx22; boolx23; float x24; float x25; float x26; struct Pagination { int x_27_1_1; boolx_27_1_2; unsigned int x_27_1_3; unsigned int x_27_1_4; } x27; boolx28; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_2_1; } x_29_1_1; } x29; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_2_1; } x_30_1_1; } x30; boolx31; int x32; struct OwnPtr<WebCore::PageGroup> { struct PageGroup {} *x_33_1_1; } x33; struct PageGroup {} *x34; struct Debugger {} *x35; double x36; int x37; boolx38; struct RefPtr<WebCore::StorageNamespace> { struct StorageNamespace {} *x_39_1_1; } x39; int x40; double x41; boolx42; boolx43; unsigned int x44; struct HashSet<WebCore::RenderObject *, WTF::PtrHash<WebCore::RenderObject *>, WTF::HashTraits<WebCore::RenderObject *> > { struct HashTable<WebCore::RenderObject *, WebCore::RenderObject *, WTF::IdentityExtractor, WTF::PtrHash<WebCore::RenderObject *>, WTF::HashTraits<WebCore::RenderObject *>, WTF::HashTraits<WebCore::RenderObject *> > { struct RenderObject {} **x_1_2_1; int x_1_2_2; int x_1_2_3; int x_1_2_4; int x_1_2_5; } x_45_1_1; } x45; struct Region { struct IntRect { struct IntPoint { int x_1_3_1; int x_1_3_2; } x_1_2_1; struct IntSize { int x_2_3_1; int x_2_3_2; } x_1_2_2; } x_46_1_1; struct Shape { struct Vector<int, 32> { unsigned int x_1_3_1; struct VectorBuffer<int, 32> { int *x_2_4_1; unsigned int x_2_4_2; struct AlignedBuffer<128, 4> { BOOL x_3_5_1[128]; } x_2_4_3; } x_1_3_2; } x_2_2_1; struct Vector<WebCore::Region::Span, 16> { unsigned int x_2_3_1; struct VectorBuffer<WebCore::Region::Span, 16> { struct Span {} *x_2_4_1; unsigned int x_2_4_2; struct AlignedBuffer<128, 4> { BOOL x_3_5_1[128]; } x_2_4_3; } x_2_3_2; } x_2_2_2; } x_46_1_2; } x46; struct Region { struct IntRect { struct IntPoint { int x_1_3_1; int x_1_3_2; } x_1_2_1; struct IntSize { int x_2_3_1; int x_2_3_2; } x_1_2_2; } x_47_1_1; struct Shape { struct Vector<int, 32> { unsigned int x_1_3_1; struct VectorBuffer<int, 32> { int *x_2_4_1; unsigned int x_2_4_2; struct AlignedBuffer<128, 4> { BOOL x_3_5_1[128]; } x_2_4_3; } x_1_3_2; } x_2_2_1; struct Vector<WebCore::Region::Span, 16> { unsigned int x_2_3_1; struct VectorBuffer<WebCore::Region::Span, 16> { struct Span {} *x_2_4_1; unsigned int x_2_4_2; struct AlignedBuffer<128, 4> { BOOL x_3_5_1[128]; } x_2_4_3; } x_2_3_2; } x_2_2_2; } x_47_1_2; } x47; boolx48; struct AlternativeTextClient {} *x49; boolx50; }*)arg1 frameName:(const struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_1_1; } x1; }*)arg2 frameView:(id)arg3 ownerElement:(struct HTMLFrameOwnerElement { int (**x1)(); struct Weak<WebCore::JSDOMWrapper> { struct WeakImpl {} *x_2_1_1; } x2; int (**x3)(); struct ContainerNode {} *x4; int x5; unsigned int x6; struct Document {} *x7; struct Node {} *x8; struct Node {} *x9; struct RenderObject {} *x10; struct Node {} *x11; struct Node {} *x12; struct QualifiedName { struct QualifiedNameImpl {} *x_13_1_1; } x13; struct OwnPtr<WebCore::ElementAttributeData> { struct ElementAttributeData {} *x_14_1_1; } x14; struct Frame {} *x15; int x16; }*)arg4;

- (void)reload;
- (void)setBaseWritingDirection:(int)arg1;
- (id)documentView;
- (struct PassRefPtr<WebCore::Range> { struct Range {} *x1; })_convertToDOMRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg1;
- (struct _NSRange { unsigned int x1; unsigned int x2; })_convertToNSRange:(struct Range { int x1; struct RefPtr<WebCore::Document> { struct Document {} *x_2_1_1; } x2; struct RangeBoundaryPoint { struct RefPtr<WebCore::Node> { struct Node {} *x_1_2_1; } x_3_1_1; int x_3_1_2; struct RefPtr<WebCore::Node> { struct Node {} *x_3_2_1; } x_3_1_3; } x3; struct RangeBoundaryPoint { struct RefPtr<WebCore::Node> { struct Node {} *x_1_2_1; } x_4_1_1; int x_4_1_2; struct RefPtr<WebCore::Node> { struct Node {} *x_3_2_1; } x_4_1_3; } x4; }*)arg1;
- (struct CGImage { }*)imageForNode:(id)arg1 allowDownsampling:(BOOL)arg2 drawContentBehindTransparentNodes:(BOOL)arg3;
- (BOOL)renderedCharactersExceed:(unsigned int)arg1;
- (id)endPosition;
- (id)startPosition;
- (void)expandSelectionToSentence;
- (void)ensureRangedSelectionContainsInitialStartPoint:(struct CGPoint { float x1; float x2; })arg1 initialEndPoint:(struct CGPoint { float x1; float x2; })arg2;
- (BOOL)setSelectionWithBasePoint:(struct CGPoint { float x1; float x2; })arg1 extentPoint:(struct CGPoint { float x1; float x2; })arg2 baseIsStart:(BOOL)arg3;
- (void)extendSelection:(BOOL)arg1;
- (struct VisiblePosition { struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_2_1; } x_1_1_1; int x_1_1_2; unsigned int x_1_1_3 : 3; unsigned int x_1_1_4 : 1; } x1; int x2; })closestWordBoundary:(struct VisiblePosition { struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_2_1; } x_1_1_1; int x_1_1_2; unsigned int x_1_1_3 : 3; unsigned int x_1_1_4 : 1; } x1; int x2; })arg1;
- (int)selectionBaseWritingDirection;
- (BOOL)setSelectionWithBasePoint:(struct CGPoint { float x1; float x2; })arg1 extentPoint:(struct CGPoint { float x1; float x2; })arg2 baseIsStart:(BOOL)arg3 allowFlipping:(BOOL)arg4;
- (BOOL)hasSelection;
- (id)selectionRectsForCoreRange:(struct Range { int x1; struct RefPtr<WebCore::Document> { struct Document {} *x_2_1_1; } x2; struct RangeBoundaryPoint { struct RefPtr<WebCore::Node> { struct Node {} *x_1_2_1; } x_3_1_1; int x_3_1_2; struct RefPtr<WebCore::Node> { struct Node {} *x_3_2_1; } x_3_1_3; } x3; struct RangeBoundaryPoint { struct RefPtr<WebCore::Node> { struct Node {} *x_1_2_1; } x_4_1_1; int x_4_1_2; struct RefPtr<WebCore::Node> { struct Node {} *x_3_2_1; } x_4_1_3; } x4; }*)arg1;
- (struct VisiblePosition { struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_2_1; } x_1_1_1; int x_1_1_2; unsigned int x_1_1_3 : 3; unsigned int x_1_1_4 : 1; } x1; int x2; })visiblePositionForPoint:(struct CGPoint { float x1; float x2; })arg1;
- (int)selectionState;
- (struct OpaqueJSContext { }*)globalContext;
- (id)windowObject;
- (id)childFrames;
- (id)findFrameNamed:(id)arg1;
- (void)reloadFromOrigin;
- (void)loadAlternateHTMLString:(id)arg1 baseURL:(id)arg2 forUnreachableURL:(id)arg3;
- (void)loadRequest:(id)arg1;
- (id)provisionalDataSource;
- (id)frameElement;
- (id)initWithName:(id)arg1 webFrameView:(id)arg2 webView:(id)arg3;
- (void)_loadHTMLString:(id)arg1 baseURL:(id)arg2 unreachableURL:(id)arg3;
- (void)_loadData:(id)arg1 MIMEType:(id)arg2 textEncodingName:(id)arg3 baseURL:(id)arg4 unreachableURL:(id)arg5;
- (void)_dispatchDidReceiveTitle:(id)arg1;
- (id)_documentFragmentForImageData:(id)arg1 withRelativeURLPart:(id)arg2 andMIMEType:(id)arg3;
- (id)_documentFragmentForText:(id)arg1;
- (id)_computePageRectsWithPrintScaleFactor:(float)arg1 pageSize:(struct CGSize { float x1; float x2; })arg2;
- (void)_clearOpener;
- (id)accessibilityRoot;
- (id)_layerTreeAsText;
- (void)setAccessibleName:(id)arg1;
- (struct OpaqueJSContext { }*)_globalContextForScriptWorld:(id)arg1;
- (id)_stringByEvaluatingJavaScriptFromString:(id)arg1 withGlobalObject:(struct OpaqueJSValue { }*)arg2 inScriptWorld:(id)arg3;
- (BOOL)_allowsFollowingLink:(id)arg1;
- (id)_cacheabilityDictionary;
- (void)_replaceSelectionWithMarkupString:(id)arg1 baseURLString:(id)arg2 selectReplacement:(BOOL)arg3 smartReplace:(BOOL)arg4;
- (void)_replaceSelectionWithText:(id)arg1 selectReplacement:(BOOL)arg2 smartReplace:(BOOL)arg3;
- (void)_resumeAnimations;
- (void)_suspendAnimations;
- (id)stringByEvaluatingJavaScriptFromString:(id)arg1 forceUserGesture:(BOOL)arg2;
- (void)clearPPTStats;
- (void)getPPTStatsWithParseCount:(unsigned int*)arg1 withLayoutCount:(unsigned int*)arg2 withForcedLayoutCount:(unsigned int*)arg3 withParseDuration:(double*)arg4 withLayoutDuration:(double*)arg5;
- (void)recursiveSetUpdateAppearanceEnabled:(BOOL)arg1;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg2;
- (BOOL)selectionAtSentenceStart;
- (id)wordsInCurrentParagraph;
- (BOOL)spaceFollowsWordInRange:(id)arg1;
- (id)wordInRange:(id)arg1;
- (void)expandSelectionToWordContainingCaretSelection;
- (id)selectedDOMRange;
- (void)setMediaDataLoadsAutomatically:(BOOL)arg1;
- (BOOL)mediaDataLoadsAutomatically;
- (BOOL)isTelephoneNumberParsingEnabled;
- (BOOL)isTelephoneNumberParsingAllowed;
- (int)layoutCount;
- (void)setCaretColor:(struct CGColor { }*)arg1;
- (struct CGSize { float x1; float x2; })renderedSizeOfNode:(id)arg1 constrainedToWidth:(float)arg2;
- (void)_saveViewState;
- (void)_restoreViewState;
- (struct _NSRange { unsigned int x1; unsigned int x2; })selectedNSRange;
- (void)setTimeoutsPaused:(BOOL)arg1;
- (unsigned int)formElementsCharacterCount;
- (unsigned int)_numberOfActiveAnimations;
- (BOOL)_pauseTransitionOfProperty:(id)arg1 onNode:(id)arg2 atTime:(double)arg3;
- (BOOL)_pauseAnimation:(id)arg1 onNode:(id)arg2 atTime:(double)arg3;
- (void)_setExcludeFromTextSearch:(bool)arg1;
- (void)_setIsDisconnected:(bool)arg1;
- (unsigned int)_pendingFrameUnloadEventCount;
- (BOOL)_isDisplayingStandaloneImage;
- (id)_selectionRangeForPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)_selectionRangeForFirstPoint:(struct CGPoint { float x1; float x2; })arg1 secondPoint:(struct CGPoint { float x1; float x2; })arg2;
- (id)_rectsForRange:(id)arg1;
- (BOOL)_loadsSynchronously;
- (BOOL)_firstLayoutDone;
- (BOOL)_isFrameSet;
- (void)_setShouldCreateRenderers:(BOOL)arg1;
- (void)_setTextAutosizingWidth:(float)arg1;
- (struct _NSRange { unsigned int x1; unsigned int x2; })_selectedNSRange;
- (void)_selectNSRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg1;
- (void)_commitData:(id)arg1;
- (BOOL)_canSaveAsWebArchive;
- (void)_setTypingStyle:(id)arg1 withUndoAction:(int)arg2;
- (id)_typingStyle;
- (id)_characterRangeAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (struct VisiblePosition { struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_2_1; } x_1_1_1; int x_1_1_2; unsigned int x_1_1_3 : 3; unsigned int x_1_1_4 : 1; } x1; int x2; })_visiblePositionForPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)_insertParagraphSeparatorInQuotedContent;
- (void)_replaceSelectionWithNode:(id)arg1 selectReplacement:(BOOL)arg2 smartReplace:(BOOL)arg3 matchStyle:(BOOL)arg4;
- (id)_documentFragmentWithNodesAsParagraphs:(id)arg1;
- (id)_smartDeleteRangeForProposedRange:(id)arg1;
- (id)_markDOMRange;
- (struct _NSRange { unsigned int x1; unsigned int x2; })_convertDOMRangeToNSRange:(id)arg1;
- (id)_convertNSRangeToDOMRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg1;
- (int)_selectionGranularity;
- (BOOL)_needsLayout;
- (void)_scrollDOMRangeToVisible:(id)arg1 withInset:(float)arg2;
- (void)_scrollDOMRangeToVisible:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_caretRectAtPosition:(const struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_1_1; } x1; int x2; unsigned int x3 : 3; unsigned int x4 : 1; }*)arg1 affinity:(int)arg2;
- (id)_stringByEvaluatingJavaScriptFromString:(id)arg1;
- (BOOL)_getVisibleRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; }*)arg1;
- (void)_drawRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 contentsOnly:(BOOL)arg2;
- (id)_stringForRange:(id)arg1;
- (id)_selectedString;
- (id)_markupStringFromRange:(id)arg1 nodes:(id*)arg2;
- (void)_setIsCommitting:(BOOL)arg1;
- (BOOL)_isCommitting;
- (id)_dataSource;
- (void)_clearSelectionInOtherFrames;
- (void)_unmarkAllMisspellings;
- (void)_unmarkAllBadGrammar;
- (id)_internalLoadDelegate;
- (void)_setInternalLoadDelegate:(id)arg1;
- (void)_updateBackgroundAndUpdatesWhileOffscreen;
- (void)_clearCoreFrame;
- (void)_detachScriptDebugger;
- (void)_attachScriptDebugger;
- (BOOL)_canProvideDocumentSource;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_firstRectForDOMRange:(id)arg1;
- (id)_stringByEvaluatingJavaScriptFromString:(id)arg1 forceUserGesture:(BOOL)arg2;
- (BOOL)_shouldFlattenCompositingLayers:(struct CGContext { }*)arg1;
- (id)_stringWithDocumentTypeStringAndMarkupString:(id)arg1;
- (id)_nodesFromList:(struct Vector<WebCore::Node *, 0> { unsigned int x1; struct VectorBuffer<WebCore::Node *, 0> { struct Node {} **x_2_1_1; unsigned int x_2_1_2; } x2; }*)arg1;
- (void)_clearSelection;
- (id)_findFrameWithSelection;
- (BOOL)_hasSelection;
- (id)_initWithWebFrameView:(id)arg1 webView:(id)arg2;
- (BOOL)isSingleLine;
- (struct Frame { int x1; struct HashSet<WebCore::FrameDestructionObserver *, WTF::PtrHash<WebCore::FrameDestructionObserver *>, WTF::HashTraits<WebCore::FrameDestructionObserver *> > { struct HashTable<WebCore::FrameDestructionObserver *, WebCore::FrameDestructionObserver *, WTF::IdentityExtractor, WTF::PtrHash<WebCore::FrameDestructionObserver *>, WTF::HashTraits<WebCore::FrameDestructionObserver *>, WTF::HashTraits<WebCore::FrameDestructionObserver *> > { struct FrameDestructionObserver {} **x_1_2_1; int x_1_2_2; int x_1_2_3; int x_1_2_4; int x_1_2_5; } x_2_1_1; } x2; struct Page {} *x3; struct FrameTree { struct Frame {} *x_4_1_1; struct Frame {} *x_4_1_2; struct AtomicString { struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_4_1; } x_1_3_1; } x_3_2_1; } x_4_1_3; struct AtomicString { struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_4_1; } x_1_3_1; } x_4_2_1; } x_4_1_4; struct RefPtr<WebCore::Frame> { struct Frame {} *x_5_2_1; } x_4_1_5; struct Frame {} *x_4_1_6; struct RefPtr<WebCore::Frame> { struct Frame {} *x_7_2_1; } x_4_1_7; struct Frame {} *x_4_1_8; unsigned int x_4_1_9; } x4; struct FrameLoader { int (**x_5_1_1)(); struct Frame {} *x_5_1_2; struct FrameLoaderClient {} *x_5_1_3; struct PolicyChecker { struct Frame {} *x_4_2_1; boolx_4_2_2; boolx_4_2_3; int x_4_2_4; struct PolicyCallback { struct ResourceRequest { struct KURL { struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_7_1; } x_1_6_1; } x_1_5_1; unsigned int x_1_5_2 : 1; unsigned int x_1_5_3 : 1; int x_1_5_4; int x_1_5_5; int x_1_5_6; int x_1_5_7; int x_1_5_8; int x_1_5_9; int x_1_5_10; int x_1_5_11; int x_1_5_12; int x_1_5_13; } x_1_4_1; int x_1_4_2; double x_1_4_3; struct KURL { struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_7_1; } x_1_6_1; } x_4_5_1; unsigned int x_4_5_2 : 1; unsigned int x_4_5_3 : 1; int x_4_5_4; int x_4_5_5; int x_4_5_6; int x_4_5_7; int x_4_5_8; int x_4_5_9; int x_4_5_10; int x_4_5_11; int x_4_5_12; int x_4_5_13; } x_1_4_4; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_6_1; } x_5_5_1; } x_1_4_5; struct HTTPHeaderMap { struct HashTable<WTF::AtomicString, std::__1::pair<WTF::AtomicString, WTF::String>, WTF::PairFirstExtractor<std::__1::pair<WTF::AtomicString, WTF::String>>, WTF::CaseFoldingHash, WTF::HashMapValueTraits<WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<WTF::String>>, WTF::HashTraits<WTF::AtomicString> > { struct pair<WTF::AtomicString, WTF::String> {} *x_1_6_1; int x_1_6_2; int x_1_6_3; int x_1_6_4; int x_1_6_5; } x_6_5_1; } x_1_4_6; struct Vector<WTF::String, 0> { unsigned int x_7_5_1; struct VectorBuffer<WTF::String, 0> { struct String {} *x_2_6_1; unsigned int x_2_6_2; } x_7_5_2; } x_1_4_7; struct RefPtr<WebCore::FormData> { struct FormData {} *x_8_5_1; } x_1_4_8; unsigned int x_1_4_9 : 1; unsigned int x_1_4_10 : 1; unsigned int x_1_4_11 : 1; unsigned int x_1_4_12 : 1; unsigned int x_1_4_13 : 1; unsigned int x_1_4_14 : 1; int x_1_4_15; boolx_1_4_16; struct RetainPtr<const _CFURLRequest *> { struct _CFURLRequest {} *x_17_5_1; } x_1_4_17; struct RetainPtr<NSURLRequest> { struct NSURLRequest { Class x_1_6_1; id x_1_6_2; } *x_18_5_1; } x_1_4_18; } x_5_3_1; struct RefPtr<WebCore::FormState> { struct FormState {} *x_2_4_1; } x_5_3_2; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_5_1; } x_3_4_1; } x_5_3_3; struct NavigationAction { struct ResourceRequest { struct KURL { struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_8_1; } x_1_7_1; } x_1_6_1; unsigned int x_1_6_2 : 1; unsigned int x_1_6_3 : 1; int x_1_6_4; int x_1_6_5; int x_1_6_6; int x_1_6_7; int x_1_6_8; int x_1_6_9; int x_1_6_10; int x_1_6_11; int x_1_6_12; int x_1_6_13; } x_1_5_1; int x_1_5_2; double x_1_5_3; struct KURL { struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_8_1; } x_1_7_1; } x_4_6_1; unsigned int x_4_6_2 : 1; unsigned int x_4_6_3 : 1; int x_4_6_4; int x_4_6_5; int x_4_6_6; int x_4_6_7; int x_4_6_8; int x_4_6_9; int x_4_6_10; int x_4_6_11; int x_4_6_12; int x_4_6_13; } x_1_5_4; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_7_1; } x_5_6_1; } x_1_5_5; struct HTTPHeaderMap { struct HashTable<WTF::AtomicString, std::__1::pair<WTF::AtomicString, WTF::String>, WTF::PairFirstExtractor<std::__1::pair<WTF::AtomicString, WTF::String>>, WTF::CaseFoldingHash, WTF::HashMapValueTraits<WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<WTF::String>>, WTF::HashTraits<WTF::AtomicString> > { struct pair<WTF::AtomicString, WTF::String> {} *x_1_7_1; int x_1_7_2; int x_1_7_3; int x_1_7_4; int x_1_7_5; } x_6_6_1; } x_1_5_6; struct Vector<WTF::String, 0> { unsigned int x_7_6_1; struct VectorBuffer<WTF::String, 0> { struct String {} *x_2_7_1; unsigned int x_2_7_2; } x_7_6_2; } x_1_5_7; struct RefPtr<WebCore::FormData> { struct FormData {} *x_8_6_1; } x_1_5_8; unsigned int x_1_5_9 : 1; unsigned int x_1_5_10 : 1; unsigned int x_1_5_11 : 1; unsigned int x_1_5_12 : 1; unsigned int x_1_5_13 : 1; unsigned int x_1_5_14 : 1; int x_1_5_15; boolx_1_5_16; struct RetainPtr<const _CFURLRequest *> { struct _CFURLRequest {} *x_17_6_1; } x_1_5_17; struct RetainPtr<NSURLRequest> { struct NSURLRequest { Class x_1_7_1; id x_1_7_2; } *x_18_6_1; } x_1_5_18; } x_4_4_1; int x_4_4_2; struct RefPtr<WebCore::Event> { struct Event {} *x_3_5_1; } x_4_4_3; } x_5_3_4; int (*x_5_3_5)(); int (*x_5_3_6)(); int (*x_5_3_7)(); void *x_5_3_8; } x_4_2_5; } x_5_1_4; struct HistoryController { struct Frame {} *x_5_2_1; struct RefPtr<WebCore::HistoryItem> { struct HistoryItem {} *x_2_3_1; } x_5_2_2; struct RefPtr<WebCore::HistoryItem> { struct HistoryItem {} *x_3_3_1; } x_5_2_3; struct RefPtr<WebCore::HistoryItem> { struct HistoryItem {} *x_4_3_1; } x_5_2_4; boolx_5_2_5; boolx_5_2_6; struct RefPtr<WebCore::HistoryItem> { struct HistoryItem {} *x_7_3_1; } x_5_2_7; int x_5_2_8; } x_5_1_5; struct ResourceLoadNotifier { struct Frame {} *x_6_2_1; } x_5_1_6; struct SubframeLoader { boolx_7_2_1; struct Frame {} *x_7_2_2; } x_5_1_7; struct FrameLoaderStateMachine { int x_8_2_1; } x_5_1_8; struct IconController { struct Frame {} *x_9_2_1; struct OwnPtr<WebCore::IconLoader> { struct IconLoader {} *x_2_3_1; } x_9_2_2; boolx_9_2_3; } x_5_1_9; int x_5_1_10; int x_5_1_11; struct RefPtr<WebCore::DocumentLoader> { struct DocumentLoader {} *x_12_2_1; } x_5_1_12; struct RefPtr<WebCore::DocumentLoader> { struct DocumentLoader {} *x_13_2_1; } x_5_1_13; struct RefPtr<WebCore::DocumentLoader> { struct DocumentLoader {} *x_14_2_1; } x_5_1_14; boolx_5_1_15; boolx_5_1_16; boolx_5_1_17; boolx_5_1_18; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_3_1; } x_19_2_1; } x_5_1_19; boolx_5_1_20; boolx_5_1_21; boolx_5_1_22; int x_5_1_23; boolx_5_1_24; struct RefPtr<WebCore::SerializedScriptValue> { struct SerializedScriptValue {} *x_25_2_1; } x_5_1_25; boolx_5_1_26; struct KURL { struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_4_1; } x_1_3_1; } x_27_2_1; unsigned int x_27_2_2 : 1; unsigned int x_27_2_3 : 1; int x_27_2_4; int x_27_2_5; int x_27_2_6; int x_27_2_7; int x_27_2_8; int x_27_2_9; int x_27_2_10; int x_27_2_11; int x_27_2_12; int x_27_2_13; } x_5_1_27; struct Timer<WebCore::FrameLoader> { int (**x_28_2_1)(); double x_28_2_2; double x_28_2_3; int x_28_2_4; unsigned int x_28_2_5; struct FrameLoader {} *x_28_2_6; } x_5_1_28; boolx_5_1_29; boolx_5_1_30; struct Frame {} *x_5_1_31; struct HashSet<WebCore::Frame *, WTF::PtrHash<WebCore::Frame *>, WTF::HashTraits<WebCore::Frame *> > { struct HashTable<WebCore::Frame *, WebCore::Frame *, WTF::IdentityExtractor, WTF::PtrHash<WebCore::Frame *>, WTF::HashTraits<WebCore::Frame *>, WTF::HashTraits<WebCore::Frame *> > { struct Frame {} **x_1_3_1; int x_1_3_2; int x_1_3_3; int x_1_3_4; int x_1_3_5; } x_32_2_1; } x_5_1_32; boolx_5_1_33; boolx_5_1_34; boolx_5_1_35; int x_5_1_36; struct RefPtr<WebCore::FrameNetworkingContext> { struct FrameNetworkingContext {} *x_37_2_1; } x_5_1_37; struct KURL { struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_4_1; } x_1_3_1; } x_38_2_1; unsigned int x_38_2_2 : 1; unsigned int x_38_2_3 : 1; int x_38_2_4; int x_38_2_5; int x_38_2_6; int x_38_2_7; int x_38_2_8; int x_38_2_9; int x_38_2_10; int x_38_2_11; int x_38_2_12; int x_38_2_13; } x_5_1_38; struct RefPtr<WebCore::HistoryItem> { struct HistoryItem {} *x_39_2_1; } x_5_1_39; boolx_5_1_40; } x5; struct NavigationScheduler { struct Frame {} *x_6_1_1; struct Timer<WebCore::NavigationScheduler> { int (**x_2_2_1)(); double x_2_2_2; double x_2_2_3; int x_2_2_4; unsigned int x_2_2_5; struct NavigationScheduler {} *x_2_2_6; } x_6_1_2; struct OwnPtr<WebCore::ScheduledNavigation> { struct ScheduledNavigation {} *x_3_2_1; } x_6_1_3; } x6; struct RefPtr<WebCore::DOMWindow> { struct DOMWindow {} *x_7_1_1; } x7; struct HTMLFrameOwnerElement {} *x8; struct RefPtr<WebCore::FrameView> { struct FrameView {} *x_9_1_1; } x9; struct RefPtr<WebCore::Document> { struct Document {} *x_10_1_1; } x10; struct ScriptController { struct HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld>, JSC::Strong<WebCore::JSDOMWindowShell>, WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld>>, WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld>>, WTF::HashTraits<JSC::Strong<WebCore::JSDOMWindowShell>> > { struct HashTable<WTF::RefPtr<WebCore::DOMWrapperWorld>, std::__1::pair<WTF::RefPtr<WebCore::DOMWrapperWorld>, JSC::Strong<WebCore::JSDOMWindowShell>>, WTF::PairFirstExtractor<std::__1::pair<WTF::RefPtr<WebCore::DOMWrapperWorld>, JSC::Strong<WebCore::JSDOMWindowShell>>>, WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld>>, WTF::PairHashTraits<WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld>>, WTF::HashTraits<JSC::Strong<WebCore::JSDOMWindowShell>>>, WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld>> > { struct pair<WTF::RefPtr<WebCore::DOMWrapperWorld>, JSC::Strong<WebCore::JSDOMWindowShell> > {} *x_1_3_1; int x_1_3_2; int x_1_3_3; int x_1_3_4; int x_1_3_5; } x_1_2_1; } x_11_1_1; struct Frame {} *x_11_1_2; struct String {} *x_11_1_3; boolx_11_1_4; struct RefPtr<JSC::Bindings::RootObject> { struct RootObject {} *x_5_2_1; } x_11_1_5; struct RefPtr<JSC::Bindings::RootObject> { struct RootObject {} *x_6_2_1; } x_11_1_6; struct HashMap<void *, WTF::RefPtr<JSC::Bindings::RootObject>, WTF::PtrHash<void *>, WTF::HashTraits<void *>, WTF::HashTraits<WTF::RefPtr<JSC::Bindings::RootObject>> > { struct HashTable<void *, std::__1::pair<void *, WTF::RefPtr<JSC::Bindings::RootObject>>, WTF::PairFirstExtractor<std::__1::pair<void *, WTF::RefPtr<JSC::Bindings::RootObject>>>, WTF::PtrHash<void *>, WTF::HashMapValueTraits<WTF::HashTraits<void *>, WTF::HashTraits<WTF::RefPtr<JSC::Bindings::RootObject>>>, WTF::HashTraits<void *> > { struct pair<void *, WTF::RefPtr<JSC::Bindings::RootObject> > {} *x_1_3_1; int x_1_3_2; int x_1_3_3; int x_1_3_4; int x_1_3_5; } x_7_2_1; } x_11_1_7; struct RetainPtr<WebScriptObject> { struct WebScriptObject { Class x_1_3_1; id x_1_3_2; } *x_8_2_1; } x_11_1_8; } x11; struct Editor { struct Frame {} *x_12_1_1; struct OwnPtr<WebCore::DeleteButtonController> { struct DeleteButtonController {} *x_2_2_1; } x_12_1_2; struct RefPtr<WebCore::CompositeEditCommand> { struct CompositeEditCommand {} *x_3_2_1; } x_12_1_3; struct RefPtr<WebCore::Node> { struct Node {} *x_4_2_1; } x_12_1_4; struct RefPtr<WebCore::Text> { struct Text {} *x_5_2_1; } x_12_1_5; unsigned int x_12_1_6; unsigned int x_12_1_7; struct Vector<WebCore::CompositionUnderline, 0> { unsigned int x_8_2_1; struct VectorBuffer<WebCore::CompositionUnderline, 0> { struct CompositionUnderline {} *x_2_3_1; unsigned int x_2_3_2; } x_8_2_2; } x_12_1_8; boolx_12_1_9; boolx_12_1_10; boolx_12_1_11; struct OwnPtr<WebCore::KillRing> { struct KillRing {} *x_12_2_1; } x_12_1_12; struct OwnPtr<WebCore::SpellChecker> { struct SpellChecker {} *x_13_2_1; } x_12_1_13; struct OwnPtr<WebCore::AlternativeTextController> { struct AlternativeTextController {} *x_14_2_1; } x_12_1_14; struct VisibleSelection { struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_4_1; } x_1_3_1; int x_1_3_2; unsigned int x_1_3_3 : 3; unsigned int x_1_3_4 : 1; } x_15_2_1; struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_4_1; } x_2_3_1; int x_2_3_2; unsigned int x_2_3_3 : 3; unsigned int x_2_3_4 : 1; } x_15_2_2; struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_4_1; } x_3_3_1; int x_3_3_2; unsigned int x_3_3_3 : 3; unsigned int x_3_3_4 : 1; } x_15_2_3; struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_4_1; } x_4_3_1; int x_4_3_2; unsigned int x_4_3_3 : 3; unsigned int x_4_3_4 : 1; } x_15_2_4; int x_15_2_5; int x_15_2_6; unsigned int x_15_2_7 : 1; unsigned int x_15_2_8 : 1; } x_12_1_15; boolx_12_1_16; int x_12_1_17; } x12; struct FrameSelection { struct IntRect { struct IntPoint { int x_1_3_1; int x_1_3_2; } x_1_2_1; struct IntSize { int x_2_3_1; int x_2_3_2; } x_1_2_2; } x_13_1_1; boolx_13_1_2; int x_13_1_3; struct Frame {} *x_13_1_4; int x_13_1_5; struct VisibleSelection { struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_4_1; } x_1_3_1; int x_1_3_2; unsigned int x_1_3_3 : 3; unsigned int x_1_3_4 : 1; } x_6_2_1; struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_4_1; } x_2_3_1; int x_2_3_2; unsigned int x_2_3_3 : 3; unsigned int x_2_3_4 : 1; } x_6_2_2; struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_4_1; } x_3_3_1; int x_3_3_2; unsigned int x_3_3_3 : 3; unsigned int x_3_3_4 : 1; } x_6_2_3; struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_4_1; } x_4_3_1; int x_4_3_2; unsigned int x_4_3_3 : 3; unsigned int x_4_3_4 : 1; } x_6_2_4; int x_6_2_5; int x_6_2_6; unsigned int x_6_2_7 : 1; unsigned int x_6_2_8 : 1; } x_13_1_6; struct VisiblePosition { struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_4_1; } x_1_3_1; int x_1_3_2; unsigned int x_1_3_3 : 3; unsigned int x_1_3_4 : 1; } x_7_2_1; int x_7_2_2; } x_13_1_7; int x_13_1_8; struct RefPtr<WebCore::EditingStyle> { struct EditingStyle {} *x_9_2_1; } x_13_1_9; struct Timer<WebCore::FrameSelection> { int (**x_10_2_1)(); double x_10_2_2; double x_10_2_3; int x_10_2_4; unsigned int x_10_2_5; struct FrameSelection {} *x_10_2_6; } x_13_1_10; struct IntRect { struct IntPoint { int x_1_3_1; int x_1_3_2; } x_11_2_1; struct IntSize { int x_2_3_1; int x_2_3_2; } x_11_2_2; } x_13_1_11; struct IntRect { struct IntPoint { int x_1_3_1; int x_1_3_2; } x_12_2_1; struct IntSize { int x_2_3_1; int x_2_3_2; } x_12_2_2; } x_13_1_12; unsigned int x_13_1_13 : 1; unsigned int x_13_1_14 : 1; unsigned int x_13_1_15 : 1; unsigned int x_13_1_16 : 1; unsigned int x_13_1_17 : 1; unsigned int x_13_1_18 : 1; struct Color { unsigned int x_19_2_1; boolx_19_2_2; } x_13_1_19; int x_13_1_20; int x_13_1_21; } x13; struct EventHandler { struct Frame {} *x_14_1_1; boolx_14_1_2; boolx_14_1_3; struct RefPtr<WebCore::Node> { struct Node {} *x_4_2_1; } x_14_1_4; boolx_14_1_5; boolx_14_1_6; int x_14_1_7; struct IntPoint { int x_8_2_1; int x_8_2_2; } x_14_1_8; boolx_14_1_9; boolx_14_1_10; boolx_14_1_11; struct Timer<WebCore::EventHandler> { int (**x_12_2_1)(); double x_12_2_2; double x_12_2_3; int x_12_2_4; unsigned int x_12_2_5; struct EventHandler {} *x_12_2_6; } x_14_1_12; struct Timer<WebCore::EventHandler> { int (**x_13_2_1)(); double x_13_2_2; double x_13_2_3; int x_13_2_4; unsigned int x_13_2_5; struct EventHandler {} *x_13_2_6; } x_14_1_13; struct RenderObject {} *x_14_1_14; boolx_14_1_15; boolx_14_1_16; boolx_14_1_17; struct Timer<WebCore::EventHandler> { int (**x_18_2_1)(); double x_18_2_2; double x_18_2_3; int x_18_2_4; unsigned int x_18_2_5; struct EventHandler {} *x_18_2_6; } x_14_1_18; boolx_14_1_19; struct RefPtr<WebCore::SVGElementInstance> { struct SVGElementInstance {} *x_20_2_1; } x_14_1_20; struct RefPtr<WebCore::SVGElementInstance> { struct SVGElementInstance {} *x_21_2_1; } x_14_1_21; struct RenderLayer {} *x_14_1_22; struct RefPtr<WebCore::Node> { struct Node {} *x_23_2_1; } x_14_1_23; boolx_14_1_24; struct RefPtr<WebCore::Node> { struct Node {} *x_25_2_1; } x_14_1_25; struct RefPtr<WebCore::Node> { struct Node {} *x_26_2_1; } x_14_1_26; struct RefPtr<WebCore::Frame> { struct Frame {} *x_27_2_1; } x_14_1_27; struct RefPtr<WebCore::Scrollbar> { struct Scrollbar {} *x_28_2_1; } x_14_1_28; int x_14_1_29; struct RefPtr<WebCore::Node> { struct Node {} *x_30_2_1; } x_14_1_30; float x_14_1_31; float x_14_1_32; float x_14_1_33; float x_14_1_34; unsigned int x_14_1_35; struct Vector<WTF::RefPtr<WebCore::Touch>, 0> { unsigned int x_36_2_1; struct VectorBuffer<WTF::RefPtr<WebCore::Touch>, 0> { struct RefPtr<WebCore::Touch> {} *x_2_3_1; unsigned int x_2_3_2; } x_36_2_2; } x_14_1_36; struct HashSet<WTF::RefPtr<WebCore::EventTarget>, WTF::PtrHash<WTF::RefPtr<WebCore::EventTarget>>, WTF::HashTraits<WTF::RefPtr<WebCore::EventTarget>> > { struct HashTable<WTF::RefPtr<WebCore::EventTarget>, WTF::RefPtr<WebCore::EventTarget>, WTF::IdentityExtractor, WTF::PtrHash<WTF::RefPtr<WebCore::EventTarget>>, WTF::HashTraits<WTF::RefPtr<WebCore::EventTarget>>, WTF::HashTraits<WTF::RefPtr<WebCore::EventTarget>> > { struct RefPtr<WebCore::EventTarget> {} *x_1_3_1; int x_1_3_2; int x_1_3_3; int x_1_3_4; int x_1_3_5; } x_37_2_1; } x_14_1_37; struct RefPtr<WebCore::Frame> { struct Frame {} *x_38_2_1; } x_14_1_38; struct RefPtr<WebCore::HTMLFrameSetElement> { struct HTMLFrameSetElement {} *x_39_2_1; } x_14_1_39; struct IntSize { int x_40_2_1; int x_40_2_2; } x_14_1_40; struct IntPoint { int x_41_2_1; int x_41_2_2; } x_14_1_41; struct IntPoint { int x_42_2_1; int x_42_2_2; } x_14_1_42; double x_14_1_43; struct PlatformMouseEvent { unsigned int x_44_2_1; unsigned int x_44_2_2; double x_44_2_3; struct IntPoint { int x_4_3_1; int x_4_3_2; } x_44_2_4; struct IntPoint { int x_5_3_1; int x_5_3_2; } x_44_2_5; int x_44_2_6; int x_44_2_7; unsigned int x_44_2_8; } x_14_1_44; boolx_14_1_45; struct RefPtr<WebCore::Node> { struct Node {} *x_46_2_1; } x_14_1_46; boolx_14_1_47; struct RefPtr<WebCore::Node> { struct Node {} *x_48_2_1; } x_14_1_48; id x_14_1_49; boolx_14_1_50; double x_14_1_51; int x_14_1_52; } x14; struct AnimationController { struct OwnPtr<WebCore::AnimationControllerPrivate> { struct AnimationControllerPrivate {} *x_1_2_1; } x_15_1_1; int x_15_1_2; } x15; struct Timer<WebCore::Frame> { int (**x_16_1_1)(); double x_16_1_2; double x_16_1_3; int x_16_1_4; unsigned int x_16_1_5; struct Frame {} *x_16_1_6; } x16; float x17; struct IntPoint { int x_18_1_1; int x_18_1_2; } x18; struct ViewportArguments { int x_19_1_1; float x_19_1_2; float x_19_1_3; float x_19_1_4; float x_19_1_5; float x_19_1_6; float x_19_1_7; } x19; boolx20; struct VisibleSelection { struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_3_1; } x_1_2_1; int x_1_2_2; unsigned int x_1_2_3 : 3; unsigned int x_1_2_4 : 1; } x_21_1_1; struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_3_1; } x_2_2_1; int x_2_2_2; unsigned int x_2_2_3 : 3; unsigned int x_2_2_4 : 1; } x_21_1_2; struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_3_1; } x_3_2_1; int x_3_2_2; unsigned int x_3_2_3 : 3; unsigned int x_3_2_4 : 1; } x_21_1_3; struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_3_1; } x_4_2_1; int x_4_2_2; unsigned int x_4_2_3 : 3; unsigned int x_4_2_4 : 1; } x_21_1_4; int x_21_1_5; int x_21_1_6; unsigned int x_21_1_7 : 1; unsigned int x_21_1_8 : 1; } x21; struct VisibleSelection { struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_3_1; } x_1_2_1; int x_1_2_2; unsigned int x_1_2_3 : 3; unsigned int x_1_2_4 : 1; } x_22_1_1; struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_3_1; } x_2_2_1; int x_2_2_2; unsigned int x_2_2_3 : 3; unsigned int x_2_2_4 : 1; } x_22_1_2; struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_3_1; } x_3_2_1; int x_3_2_2; unsigned int x_3_2_3 : 3; unsigned int x_3_2_4 : 1; } x_22_1_3; struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_3_1; } x_4_2_1; int x_4_2_2; unsigned int x_4_2_3 : 3; unsigned int x_4_2_4 : 1; } x_22_1_4; int x_22_1_5; int x_22_1_6; unsigned int x_22_1_7 : 1; unsigned int x_22_1_8 : 1; } x22; float x23; unsigned int x24; unsigned int x25; unsigned int x26; double x27; double x28; float x29; float x30; int x31; boolx32; boolx33; boolx34; int x35; boolx36; int x37; }*)coreFrame;
- (BOOL)hasRichlyEditableSelection;
- (BOOL)_isIncludedInWebKitStatistics;
- (id)_documentFragmentWithMarkupString:(id)arg1 baseURLString:(id)arg2;
- (void)_replaceSelectionWithFragment:(id)arg1 selectReplacement:(BOOL)arg2 smartReplace:(BOOL)arg3 matchStyle:(BOOL)arg4;
- (void)printToCGContext:(struct CGContext { }*)arg1 :(float)arg2 :(float)arg3;
- (id)pageSizeAndMarginsInPixels:(int)arg1 :(int)arg2 :(int)arg3 :(int)arg4 :(int)arg5 :(int)arg6 :(int)arg7;
- (bool)isPageBoxVisible:(int)arg1;
- (id)pageProperty:(const char *)arg1 :(int)arg2;
- (int)numberOfPages:(float)arg1 :(float)arg2;
- (int)pageNumberForElement:(id)arg1 :(float)arg2 :(float)arg3;
- (id)counterValueForElement:(id)arg1;
- (id)renderTreeAsExternalRepresentationForPrinting:(BOOL)arg1;
- (id)frameView;
- (void)setNeedsLayout;
- (id)webView;
- (struct CGColor { }*)_bodyBackgroundColor;
- (id)DOMDocument;
- (void)loadData:(id)arg1 MIMEType:(id)arg2 textEncodingName:(id)arg3 baseURL:(id)arg4;
- (void)loadArchive:(id)arg1;
- (id)dataSource;
- (id)init;
- (void)dealloc;
- (id)name;
- (void)finalize;
- (void)resetSelection;
- (void)moveSelectionToStart;
- (void)moveSelectionToEnd;
- (void)smartExtendRangedSelection:(int)arg1;
- (id)wordAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (BOOL)setRangedSelectionExtentPoint:(struct CGPoint { float x1; float x2; })arg1 baseIsStart:(BOOL)arg2 allowFlipping:(BOOL)arg3;
- (void)setRangedSelectionInitialExtentToCurrentSelectionEnd;
- (void)setRangedSelectionInitialExtentToCurrentSelectionStart;
- (void)setRangedSelectionBaseToCurrentSelectionEnd;
- (void)setRangedSelectionBaseToCurrentSelectionStart;
- (void)aggressivelyExpandSelectionToWordContainingCaretSelection;
- (void)setSelectionWithFirstPoint:(struct CGPoint { float x1; float x2; })arg1 secondPoint:(struct CGPoint { float x1; float x2; })arg2;
- (void)setRangedSelectionWithExtentPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)clearRangedSelectionInitialExtent;
- (void)setRangedSelectionBaseToCurrentSelection;
- (id)selectionRects;
- (BOOL)_isDescendantOfFrame:(id)arg1;
- (id)parentFrame;
- (void)_setVisibleSize:(struct CGSize { float x1; float x2; })arg1;
- (id)scrollableNodeAtViewportLocation:(struct CGPoint { float x1; float x2; })arg1;
- (id)deepestNodeAtViewportLocation:(struct CGPoint { float x1; float x2; })arg1;
- (id)approximateNodeAtViewportLocation:(struct CGPoint { float x1; float x2; }*)arg1;
- (int)innerLineHeight:(id)arg1;
- (void)moveSelectionToPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)elementRangeContainingCaretSelection;
- (void)_setProhibitsScrolling:(BOOL)arg1;
- (id)webVisiblePositionForPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)toggleBaseWritingDirection;
- (void)resumeFromPause;
- (void)setPluginsPaused:(BOOL)arg1;
- (void)prepareForPause;
- (BOOL)focusedNodeHasContent;
- (void)expandSelectionToElementContainingCaretSelection;
- (void)_selectAll;
- (void)_replaceSelectionWithWebArchive:(id)arg1 selectReplacement:(BOOL)arg2 smartReplace:(BOOL)arg3;
- (struct __GSFont { }*)fontForSelection:(BOOL*)arg1;
- (id)markedTextDOMRange;
- (void)setMarkedText:(id)arg1 forCandidates:(BOOL)arg2;
- (void)selectWithoutClosingTypingNSRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg1;
- (id)interpretationsForCurrentRoot;
- (void)forceLayoutAdjustingViewSize:(BOOL)arg1;
- (id)dictationResultMetadataForRange:(id)arg1;
- (id)stringForRange:(id)arg1;
- (void)getDictationResultRanges:(id*)arg1 andMetadatas:(id*)arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })renderRectForPoint:(struct CGPoint { float x1; float x2; })arg1 isReplaced:(BOOL*)arg2 fontSize:(float*)arg3;
- (void)sendOrientationChangeEvent:(int)arg1;
- (void)removeUnchangeableStyles;
- (int)_loadType;
- (BOOL)_isVisuallyNonEmpty;
- (void)_userScrolled;
- (void)sendScrollEvent;
- (void)resetTextAutosizingBeforeLayout;
- (void)_setLoadsSynchronously:(BOOL)arg1;
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2;
- (BOOL)hasEditableSelection;
- (id)rangeByExtendingCurrentSelection:(int)arg1;
- (id)rangeByMovingCurrentSelection:(int)arg1;
- (BOOL)selectionAtWordStart;
- (BOOL)selectionAtDocumentStart;
- (int)wordOffsetInRange:(id)arg1;
- (void)expandSelectionToStartOfWordContainingCaretSelection;
- (unsigned short)characterAfterCaretSelection;
- (unsigned short)characterInRelationToCaretSelection:(int)arg1;
- (void)confirmMarkedText:(id)arg1;
- (void)collapseSelection;
- (id)wordRangeContainingCaretSelection;
- (unsigned short)characterBeforeCaretSelection;
- (id)nextUnperturbedDictationResultBoundaryFromPosition:(id)arg1;
- (id)previousUnperturbedDictationResultBoundaryFromPosition:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })firstRectForDOMRange:(id)arg1;
- (void)setSelectedDOMRange:(id)arg1 affinity:(int)arg2 closeTyping:(BOOL)arg3;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })caretRectAtNode:(id)arg1 offset:(int)arg2 affinity:(int)arg3;
- (id)convertNSRangeToDOMRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })rectForScrollToVisible;
- (void)setDictationPhrases:(id)arg1 metadata:(id)arg2 asChildOfElement:(id)arg3;
- (void)setSelectionChangeCallbacksDisabled:(BOOL)arg1;
- (int)preferredHeight;
- (void)_setSelectionFromNone;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })caretRect;
- (void)setText:(id)arg1 asChildOfElement:(id)arg2;
- (void)updateLayout;
- (struct _NSRange { unsigned int x1; unsigned int x2; })convertDOMRangeToNSRange:(id)arg1;
- (void)revealSelectionAtExtent:(BOOL)arg1;
- (void)selectNSRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg1;
- (void)selectNSRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg1 onElement:(id)arg2;
- (void)setIsActive:(BOOL)arg1;
- (void)setIsSingleLine:(BOOL)arg1;
- (void)createDefaultFieldEditorDocumentStructure;
- (id)selectionRectsForRange:(id)arg1;
- (void)setSelectionGranularity:(int)arg1;
- (int)selectionAffinity;
- (id)characterRangeAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })caretRectForPosition:(id)arg1;
- (void)_replaceSelectionWithText:(id)arg1 selectReplacement:(BOOL)arg2 smartReplace:(BOOL)arg3 matchStyle:(BOOL)arg4;
- (id)_documentFragmentForWebArchive:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })closestCaretRectInMarkedTextRangeForPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)clearSelection;
- (BOOL)needsLayout;
- (void)_handleKeyEvent:(id)arg1;
- (void)stopLoading;
- (BOOL)isOrphaned;
- (BOOL)containsAnyFocusedFormFields;
- (BOOL)containsAnyFormFields;
- (id)allFormFields;
- (BOOL)isMainFrame;
- (void)_collectFormFieldElementsIntoArray:(id)arg1 upToLimit:(unsigned int)arg2 onlyIncludeFocusedElements:(BOOL)arg3;
- (id)_topFrame;
- (BOOL)isTexty;
- (BOOL)containsOnlySelectableElements;
- (oneway void)_webcore_releaseOnWebThread;
- (oneway void)release;

@end
