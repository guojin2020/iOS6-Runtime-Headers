/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator6.0.sdk/System/Library/Frameworks/GameKit.framework/GameKit
 */

@class GKChallenge, UIImage;

@interface GKChallengeCellContentView : GKPlayerCellContentView  {
    GKChallenge *_challenge;
    id _challengeAuxData;
    UIImage *_messageBubble;
}

@property(retain) GKChallenge * challenge;
@property(retain) id challengeAuxData;
@property(retain) UIImage * messageBubble;

+ (id)challengeContentView;
+ (void)loadPhotoForPlayer:(id)arg1 completionHandler:(id)arg2;
+ (int)lineCount;
+ (float)defaultRowHeight;

- (void)setMessageBubble:(id)arg1;
- (id)messageBubble;
- (id)challengeAuxData;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })bubbleRectForContentRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGPoint { float x1; float x2; })originForLine:(unsigned int)arg1 forTextRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
- (id)attributesForMessage:(id)arg1;
- (id)composeLabelWithPlayer:(id)arg1 message:(id)arg2 highlighted:(BOOL)arg3;
- (id)quotedMessage;
- (void)updateLineFormat;
- (void)setChallengeAuxData:(id)arg1;
- (void)updateLines;
- (void)adjustLineRects:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; }*)arg1 forLines:(id)arg2 inTextRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg3;
- (id)initWithNumberOfLines:(unsigned int)arg1;
- (void)drawRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setChallenge:(id)arg1;
- (id)challenge;
- (void)dealloc;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })textRectForContentRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)prepareForReuse;

@end
