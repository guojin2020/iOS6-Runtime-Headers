/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator6.0.sdk/System/Library/Frameworks/GLKit.framework/GLKit
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class UIScreen, GLKDisplayLinkMessenger, CADisplayLink, <GLKViewControllerDelegate>;

@interface GLKViewController : UIViewController <NSCoding, GLKViewDelegate> {
    UIScreen *_screen;
    CADisplayLink *_displayLink;
    BOOL _displayLinkPaused;
    GLKDisplayLinkMessenger *_displayLinkMessenger;
    BOOL _viewIsVisible;
    BOOL _firstResumeOccurred;
    double _timeSinceFirstResumeStartTime;
    BOOL _lastResumeOccurred;
    double _timeSinceLastResumeStartTime;
    BOOL _lastUpdateOccurred;
    double _timeSinceLastUpdatePreviousTime;
    BOOL _lastDrawOccurred;
    double _timeSinceLastDrawPreviousTime;
    int (*_updateIMP)();
    <GLKViewControllerDelegate> *_delegate;
    int _screenFramesPerSecond;
    int _frameInterval;
    int _preferredFramesPerSecond;
    int _framesPerSecond;
    int _framesDisplayed;
    double _timeSinceFirstResume;
    double _timeSinceLastResume;
    double _timeSinceLastUpdate;
    double _timeSinceLastDraw;
    BOOL _pauseOnWillResignActive;
    BOOL _resumeOnDidBecomeActive;
}

@property <GLKViewControllerDelegate> * delegate;
@property int preferredFramesPerSecond;
@property(readonly) int framesPerSecond;
@property(getter=isPaused) BOOL paused;
@property(readonly) int framesDisplayed;
@property(readonly) double timeSinceFirstResume;
@property(readonly) double timeSinceLastResume;
@property(readonly) double timeSinceLastUpdate;
@property(readonly) double timeSinceLastDraw;
@property BOOL pauseOnWillResignActive;
@property BOOL resumeOnDidBecomeActive;
@property(retain) UIScreen * screen;
@property(retain) CADisplayLink * displayLink;
@property BOOL displayLinkPaused;
@property(retain) GLKDisplayLinkMessenger * displayLinkMessenger;
@property BOOL viewIsVisible;
@property BOOL firstResumeOccurred;
@property double timeSinceFirstResumeStartTime;
@property BOOL lastResumeOccurred;
@property double timeSinceLastResumeStartTime;
@property BOOL lastUpdateOccurred;
@property double timeSinceLastUpdatePreviousTime;
@property BOOL lastDrawOccurred;
@property double timeSinceLastDrawPreviousTime;
@property int (* updateIMP;
@property int screenFramesPerSecond;
@property int frameInterval;


- (double)timeSinceLastDraw;
- (double)timeSinceLastUpdate;
- (int)framesDisplayed;
- (int)framesPerSecond;
- (void)setScreenFramesPerSecond:(int)arg1;
- (int)screenFramesPerSecond;
- (void)setUpdateIMP:(int (*)())arg1;
- (int (*)())updateIMP;
- (void)setTimeSinceLastDrawPreviousTime:(double)arg1;
- (double)timeSinceLastDrawPreviousTime;
- (void)setLastDrawOccurred:(BOOL)arg1;
- (BOOL)lastDrawOccurred;
- (void)setTimeSinceLastUpdatePreviousTime:(double)arg1;
- (double)timeSinceLastUpdatePreviousTime;
- (void)setLastUpdateOccurred:(BOOL)arg1;
- (BOOL)lastUpdateOccurred;
- (void)setTimeSinceLastResumeStartTime:(double)arg1;
- (double)timeSinceLastResumeStartTime;
- (void)setLastResumeOccurred:(BOOL)arg1;
- (BOOL)lastResumeOccurred;
- (void)setTimeSinceFirstResumeStartTime:(double)arg1;
- (double)timeSinceFirstResumeStartTime;
- (void)setFirstResumeOccurred:(BOOL)arg1;
- (BOOL)firstResumeOccurred;
- (void)setViewIsVisible:(BOOL)arg1;
- (BOOL)viewIsVisible;
- (id)displayLinkMessenger;
- (void)setDisplayLinkPaused:(BOOL)arg1;
- (BOOL)displayLinkPaused;
- (BOOL)resumeOnDidBecomeActive;
- (void)setResumeOnDidBecomeActive:(BOOL)arg1;
- (BOOL)pauseOnWillResignActive;
- (void)setPauseOnWillResignActive:(BOOL)arg1;
- (double)timeSinceLastResume;
- (double)timeSinceFirstResume;
- (int)preferredFramesPerSecond;
- (void)_createDisplayLinkForScreen:(id)arg1;
- (void)_resumeByNotification;
- (void)_pauseByNotification;
- (void)_configureNotifications;
- (void)setDisplayLinkMessenger:(id)arg1;
- (void)setPreferredFramesPerSecond:(int)arg1;
- (int)_calculateScreenFramesPerSecond:(id)arg1;
- (void)_updateScreenIfChanged;
- (void)_updateAndDraw;
- (void)glkView:(id)arg1 drawInRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
- (void)_initCommon;
- (int)frameInterval;
- (id)init;
- (void)dealloc;
- (void)setPaused:(BOOL)arg1;
- (void)viewWillDisappear:(BOOL)arg1;
- (void)viewWillAppear:(BOOL)arg1;
- (void)viewDidUnload;
- (void)loadView;
- (void)viewDidLoad;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)displayLink;
- (void)setDisplayLink:(id)arg1;
- (void)viewDidMoveToWindow:(id)arg1 shouldAppearOrDisappear:(BOOL)arg2;
- (void)setFrameInterval:(int)arg1;
- (void)setScreen:(id)arg1;
- (void)setView:(id)arg1;
- (id)screen;
- (BOOL)isPaused;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end
