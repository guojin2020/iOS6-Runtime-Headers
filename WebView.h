/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator6.0.sdk/System/Library/PrivateFrameworks/WebKit.framework/WebKit
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class WebViewPrivate;

@interface WebView : WAKView  {
    WebViewPrivate *_private;
}

+ (void)_preflightSpellCheckerNow:(id)arg1;
+ (unsigned int)_maxCacheModelInAnyInstance;
+ (unsigned int)_didSetCacheModel;
+ (void)_preflightSpellChecker;
+ (void)registerURLSchemeAsLocal:(id)arg1;
+ (void)setMIMETypesShownAsHTML:(id)arg1;
+ (id)MIMETypesShownAsHTML;
+ (BOOL)_canShowMIMEType:(id)arg1 allowingPlugins:(BOOL)arg2;
+ (void)_preferencesRemovedNotification:(id)arg1;
+ (void)_cacheModelChangedNotification:(id)arg1;
+ (void)_setTileCacheLayerPoolCapacity:(unsigned int)arg1;
+ (void)_setHTTPPipeliningEnabled:(BOOL)arg1;
+ (BOOL)_HTTPPipeliningEnabled;
+ (double)_defaultMinimumTimerInterval;
+ (void)_setLoadResourcesSerially:(BOOL)arg1;
+ (void)_registerURLSchemeAsAllowingDatabaseAccessInPrivateBrowsing:(id)arg1;
+ (void)_registerURLSchemeAsAllowingLocalStorageAccessInPrivateBrowsing:(id)arg1;
+ (void)_registerURLSchemeAsSecure:(id)arg1;
+ (void)_setDomainRelaxationForbidden:(BOOL)arg1 forURLScheme:(id)arg2;
+ (void)_removeAllUserContentFromGroup:(id)arg1;
+ (void)_removeUserScriptsFromGroup:(id)arg1 world:(id)arg2;
+ (void)_removeUserStyleSheetFromGroup:(id)arg1 world:(id)arg2 url:(id)arg3;
+ (void)_removeUserScriptFromGroup:(id)arg1 world:(id)arg2 url:(id)arg3;
+ (void)_addUserScriptToGroup:(id)arg1 world:(id)arg2 source:(id)arg3 url:(id)arg4 whitelist:(id)arg5 blacklist:(id)arg6 injectionTime:(int)arg7;
+ (void)_resetOriginAccessWhitelists;
+ (void)_removeOriginAccessWhitelistEntryWithSourceOrigin:(id)arg1 destinationProtocol:(id)arg2 destinationHost:(id)arg3 allowDestinationSubdomains:(BOOL)arg4;
+ (void)_addOriginAccessWhitelistEntryWithSourceOrigin:(id)arg1 destinationProtocol:(id)arg2 destinationHost:(id)arg3 allowDestinationSubdomains:(BOOL)arg4;
+ (unsigned int)_maximumImageSizeBeforeSubsampling;
+ (void)_setMaximumImageSizeBeforeSubsampling:(unsigned int)arg1;
+ (BOOL)_shouldUseFontSmoothing;
+ (void)_setShouldUseFontSmoothing:(BOOL)arg1;
+ (id)_decodeData:(id)arg1;
+ (void)_registerViewClass:(Class)arg1 representationClass:(Class)arg2 forURLScheme:(id)arg3;
+ (BOOL)_isRemoteInspectorEnabled;
+ (void)_disableAutoStartRemoteInspector;
+ (void)_disableRemoteInspector;
+ (BOOL)_isUnderMemoryPressure;
+ (BOOL)_allowCookies;
+ (void)_setAllowCookies:(BOOL)arg1;
+ (BOOL)_acceleratedImageDecoding;
+ (void)_setAcceleratedImageDecoding:(BOOL)arg1;
+ (BOOL)canShowFile:(id)arg1;
+ (void)closeAllWebViews;
+ (BOOL)canCloseAllWebViews;
+ (BOOL)_allowsRoundingHacks;
+ (void)willEnterBackgroundWithCompletionHandler:(id)arg1;
+ (id)_supportedMIMETypes;
+ (void)_reportException:(struct OpaqueJSValue { }*)arg1 inContext:(struct OpaqueJSContext { }*)arg2;
+ (id)_standardUserAgentWithApplicationName:(id)arg1;
+ (void)_addUserStyleSheetToGroup:(id)arg1 world:(id)arg2 source:(id)arg3 url:(id)arg4 whitelist:(id)arg5 blacklist:(id)arg6 injectedFrames:(int)arg7;
+ (void)_addUserScriptToGroup:(id)arg1 world:(id)arg2 source:(id)arg3 url:(id)arg4 whitelist:(id)arg5 blacklist:(id)arg6 injectionTime:(int)arg7 injectedFrames:(int)arg8;
+ (BOOL)canShowMIMEType:(id)arg1;
+ (id)_MIMETypeForFile:(id)arg1;
+ (void)_unregisterViewClassAndRepresentationClassForMIMEType:(id)arg1;
+ (void)registerViewClass:(Class)arg1 representationClass:(Class)arg2 forMIMEType:(id)arg3;
+ (void)_releaseMemoryNow;
+ (void)garbageCollectNow;
+ (void)_handleMemoryWarning;
+ (void)releaseFastMallocMemory;
+ (void)discardAllCompiledCode;
+ (void)drainLayerPool;
+ (void)_enableRemoteInspector;
+ (id)_standardUserAgentWithApplicationName:(id)arg1 osMarketingVersion:(id)arg2;
+ (void)_makeAllWebViewsPerformSelector:(SEL)arg1;
+ (void)registerForMemoryNotifications;
+ (void)_setAllowsRoundingHacks:(BOOL)arg1;
+ (void)enableWebThread;
+ (void)_unregisterPluginMIMEType:(id)arg1;
+ (void)_registerPluginMIMEType:(id)arg1;
+ (void)_setPDFViewClass:(Class)arg1;
+ (void)_setPDFRepresentationClass:(Class)arg1;
+ (Class)_getPDFViewClass;
+ (id)_generatedMIMETypeForURLScheme:(id)arg1;
+ (BOOL)_representationExistsForURLScheme:(id)arg1;
+ (id)sharedWebInspectorServer;
+ (BOOL)shouldIncludeInWebKitStatistics;
+ (BOOL)_canHandleRequest:(id)arg1 forMainFrame:(BOOL)arg2;
+ (BOOL)canShowMIMETypeAsHTML:(id)arg1;
+ (Class)_getPDFRepresentationClass;
+ (BOOL)_viewClass:(Class*)arg1 andRepresentationClass:(Class*)arg2 forMIMEType:(id)arg3 allowingPlugins:(BOOL)arg4;
+ (void)purgeInactiveFontData;
+ (void)_setCacheModel:(unsigned int)arg1;
+ (unsigned int)_cacheModel;
+ (void)initialize;
+ (BOOL)isCharacterSmartReplaceExempt:(unsigned short)arg1 isPreviousCharacter:(BOOL)arg2;
+ (BOOL)_canHandleRequest:(id)arg1;
+ (id)_productivityDocumentMIMETypes;
+ (void)_addUserStyleSheetToGroup:(id)arg1 world:(id)arg2 source:(id)arg3 url:(id)arg4 whitelist:(id)arg5 blacklist:(id)arg6;
+ (void)_removeUserStyleSheetsFromGroup:(id)arg1 world:(id)arg2;
+ (void)_setAlwaysUsesComplexTextCodePath:(BOOL)arg1;

- (void)setBackgroundColor:(struct CGColor { }*)arg1;
- (void)viewDidMoveToWindow;
- (BOOL)becomeFirstResponder;
- (void)_didFinishScrollingOrZooming;
- (void)_willStartScrollingOrZooming;
- (void)_dispatchTileDidDraw:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (struct OpaqueJSValue { }*)_computedStyleIncludingVisitedInfo:(struct OpaqueJSContext { }*)arg1 forElement:(struct OpaqueJSValue { }*)arg2;
- (void)_notificationsDidClose:(id)arg1;
- (void)_notificationDidClick:(unsigned long long)arg1;
- (void)_notificationDidShow:(unsigned long long)arg1;
- (void)_notificationControllerDestroyed;
- (void)_setNotificationProvider:(id)arg1;
- (id)_notificationProvider;
- (void)_setGeolocationProvider:(id)arg1;
- (void)_setDeviceOrientationProvider:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_convertRectFromRootView:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGPoint { float x1; float x2; })_convertPointFromRootView:(struct CGPoint { float x1; float x2; })arg1;
- (BOOL)_needsOneShotDrawingSynchronization;
- (BOOL)_becomingFirstResponderFromOutside;
- (BOOL)_syncCompositingChanges;
- (void)_retrieveKeyboardUIModeFromPreferences:(id)arg1;
- (void)_simplifyMarkup:(id)arg1 endNode:(id)arg2;
- (BOOL)_selectionIsAll;
- (BOOL)_selectionIsCaret;
- (void)_replaceSelectionWithNode:(id)arg1 matchStyle:(BOOL)arg2;
- (void)_insertNewlineInQuotedContent;
- (void)toggleBaseWritingDirection:(id)arg1;
- (void)takeFindStringFromSelection:(id)arg1;
- (void)stopSpeaking:(id)arg1;
- (void)startSpeaking:(id)arg1;
- (void)showGuessPanel:(id)arg1;
- (void)performFindPanelAction:(id)arg1;
- (void)pasteFont:(id)arg1;
- (void)pasteAsRichText:(id)arg1;
- (void)orderFrontSubstitutionsPanel:(id)arg1;
- (void)makeBaseWritingDirectionRightToLeft:(id)arg1;
- (void)makeBaseWritingDirectionLeftToRight:(id)arg1;
- (void)copyFont:(id)arg1;
- (void)complete:(id)arg1;
- (void)checkSpelling:(id)arg1;
- (void)changeSpelling:(id)arg1;
- (void)changeFont:(id)arg1;
- (void)changeDocumentBackgroundColor:(id)arg1;
- (void)changeColor:(id)arg1;
- (void)changeBaseWritingDirectionToRTL:(id)arg1;
- (void)changeBaseWritingDirectionToLTR:(id)arg1;
- (void)changeBaseWritingDirection:(id)arg1;
- (void)changeAttributes:(id)arg1;
- (void)_performResponderOperation:(SEL)arg1 with:(id)arg2;
- (id)_responderForResponderOperations;
- (void)deleteSelection;
- (void)replaceSelectionWithArchive:(id)arg1;
- (void)replaceSelectionWithMarkupString:(id)arg1;
- (void)replaceSelectionWithText:(id)arg1;
- (void)replaceSelectionWithNode:(id)arg1;
- (BOOL)isAutomaticSpellingCorrectionEnabled;
- (BOOL)isAutomaticTextReplacementEnabled;
- (BOOL)isAutomaticDashSubstitutionEnabled;
- (BOOL)isAutomaticLinkDetectionEnabled;
- (BOOL)isAutomaticQuoteSubstitutionEnabled;
- (id)styleDeclarationWithText:(id)arg1;
- (id)typingStyle;
- (id)editableDOMRangeForPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)registerForEditingDelegateNotification:(id)arg1 selector:(SEL)arg2;
- (BOOL)_continuousCheckingAllowed;
- (id)computedStyleForElement:(id)arg1 pseudoElement:(id)arg2;
- (void)removeVisitedLink:(id)arg1;
- (void)addVisitedLinks:(id)arg1;
- (float)mediaVolume;
- (void)setMediaVolume:(float)arg1;
- (void)resetPageZoom:(id)arg1;
- (BOOL)canResetPageZoom;
- (void)zoomPageOut:(id)arg1;
- (BOOL)canZoomPageOut;
- (void)zoomPageIn:(id)arg1;
- (BOOL)canZoomPageIn;
- (float)pageSizeMultiplier;
- (void)setPageSizeMultiplier:(float)arg1;
- (void)setAllowsUndo:(BOOL)arg1;
- (BOOL)allowsUndo;
- (void)scrollDOMRangeToVisible:(id)arg1 withInset:(float)arg2;
- (void)scrollDOMRangeToVisible:(id)arg1;
- (BOOL)canMarkAllTextMatches;
- (BOOL)shouldClose;
- (void)setHistoryDelegate:(id)arg1;
- (BOOL)tabKeyCyclesThroughElements;
- (void)setTabKeyCyclesThroughElements:(BOOL)arg1;
- (id)DOMRangeOfString:(id)arg1 relativeTo:(id)arg2 options:(unsigned int)arg3;
- (unsigned int)countMatchesForText:(id)arg1 inDOMRange:(id)arg2 options:(unsigned int)arg3 highlight:(BOOL)arg4 limit:(unsigned int)arg5 markMatches:(BOOL)arg6;
- (void)makeTextStandardSize:(id)arg1;
- (BOOL)canMakeTextStandardSize;
- (void)makeTextLarger:(id)arg1;
- (BOOL)canMakeTextLarger;
- (void)makeTextSmaller:(id)arg1;
- (BOOL)canMakeTextSmaller;
- (void)reloadFromOrigin:(id)arg1;
- (void)stopLoadingAndClear;
- (void)takeStringURLFrom:(id)arg1;
- (void)setShouldUpdateWhileOffscreen:(BOOL)arg1;
- (id)mainFrameDocument;
- (id)mainFrameIconURL;
- (id)mainFrameTitle;
- (id)mainFrameURL;
- (void)setMainFrameURL:(id)arg1;
- (id)documentViewAtWindowPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)hostWindow;
- (id)userAgentForURL:(id)arg1;
- (id)windowScriptObject;
- (void)setCustomTextEncodingName:(id)arg1;
- (void)setMediaStyle:(id)arg1;
- (id)applicationNameForUserAgent;
- (void)_resetZoom:(id)arg1 isTextOnly:(BOOL)arg2;
- (BOOL)_canResetZoom:(BOOL)arg1;
- (void)_zoomIn:(id)arg1 isTextOnly:(BOOL)arg2;
- (void)_zoomOut:(id)arg1 isTextOnly:(BOOL)arg2;
- (BOOL)_canZoomIn:(BOOL)arg1;
- (BOOL)_canZoomOut:(BOOL)arg1;
- (id)selectedFrame;
- (void)setPreferencesIdentifier:(id)arg1;
- (BOOL)shouldCloseWithWindow;
- (void)setShouldCloseWithWindow:(BOOL)arg1;
- (id)_initWithArguments:(id)arg1;
- (BOOL)_isMIMETypeRegisteredAsPlugin:(id)arg1;
- (BOOL)_isLoading;
- (id)_elementAtWindowPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)_frameViewAtWindowPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)_mainFrameOverrideEncoding;
- (id)customTextEncodingName;
- (float)_zoomMultiplier:(BOOL)arg1;
- (id)_focusedFrame;
- (id)frameLoadDelegate;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 frameName:(id)arg2 groupName:(id)arg3;
- (void)_setWebGLEnabled:(BOOL)arg1;
- (BOOL)_webGLEnabled;
- (BOOL)_wantsTelephoneNumberParsing;
- (void)_setMinimumTimerInterval:(double)arg1;
- (unsigned int)countMatchesForText:(id)arg1 caseSensitive:(BOOL)arg2 highlight:(BOOL)arg3 limit:(unsigned int)arg4 markMatches:(BOOL)arg5;
- (unsigned int)markAllMatchesForText:(id)arg1 caseSensitive:(BOOL)arg2 highlight:(BOOL)arg3 limit:(unsigned int)arg4;
- (void)_setUseFixedLayout:(BOOL)arg1;
- (float)_viewScaleFactor;
- (void)_scaleWebView:(float)arg1 atOrigin:(struct CGPoint { float x1; float x2; })arg2;
- (void)setCSSAnimationsSuspended:(BOOL)arg1;
- (BOOL)cssAnimationsSuspended;
- (void)_updateActiveState;
- (id)trackedRepaintRects;
- (void)resetTrackedRepaints;
- (BOOL)isTrackingRepaints;
- (void)setTracksRepaints:(BOOL)arg1;
- (void)_setIncludesFlattenedCompositingLayersWhenDrawingToBitmap:(BOOL)arg1;
- (BOOL)_isSoftwareRenderable;
- (void)setValidationMessageTimerMagnification:(int)arg1;
- (void)setInteractiveFormValidationEnabled:(BOOL)arg1;
- (void)_setBaseCTM:(struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })arg1 forContext:(struct CGContext { }*)arg2;
- (void)_setPostsAcceleratedCompositingNotifications:(BOOL)arg1;
- (BOOL)_postsAcceleratedCompositingNotifications;
- (void)_setJavaScriptURLsAreAllowed:(BOOL)arg1;
- (BOOL)areMemoryCacheDelegateCallsEnabled;
- (void)setMemoryCacheDelegateCallsEnabled:(BOOL)arg1;
- (void)setSelectTrailingWhitespaceEnabled:(BOOL)arg1;
- (void)_clearMainFrameName;
- (void)_setCustomHTMLTokenizerChunkSize:(int)arg1;
- (void)_setCustomHTMLTokenizerTimeDelay:(double)arg1;
- (void)_executeCoreCommandByName:(id)arg1 value:(id)arg2;
- (BOOL)_catchesDelegateExceptions;
- (void)_setCatchesDelegateExceptions:(BOOL)arg1;
- (id)textIteratorForRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)_globalHistoryItem;
- (void)_setAllowsMessaging:(BOOL)arg1;
- (void)_detachScriptDebuggerFromAllFrames;
- (void)_attachScriptDebuggerToAllFrames;
- (void)_setNeedsUnrestrictedGetMatchedCSSRules:(BOOL)arg1;
- (void)_clearBackForwardCache;
- (void)_destroyAllPlugIns;
- (void)_setCookieEnabled:(BOOL)arg1;
- (BOOL)_cookieEnabled;
- (BOOL)_inFastImageScalingMode;
- (void)_setUseFastImageScalingMode:(BOOL)arg1;
- (BOOL)_inViewSourceMode;
- (void)_setInViewSourceMode:(BOOL)arg1;
- (id)_displayURL;
- (void)removeCaretChangeListener:(id)arg1;
- (void)addCaretChangeListener:(id)arg1;
- (id)caretChangeListeners;
- (id)caretChangeListener;
- (void)_cacheHistoryDelegateImplementations;
- (void)_cacheScriptDebugDelegateImplementations;
- (void)_cacheFrameLoadDelegateImplementations;
- (void)_cacheResourceLoadDelegateImplementations;
- (id)_formDelegateForwarder;
- (void)_loadBackForwardListFromOtherView:(id)arg1;
- (id)remoteInspectorUserInfo;
- (void)setRemoteInspectorUserInfo:(id)arg1;
- (id)hostApplicationName;
- (id)hostApplicationBundleId;
- (void)setIndicatingForRemoteInspector:(BOOL)arg1;
- (id)_openNewWindowWithRequest:(id)arg1;
- (void)_setResourceLoadSchedulerSuspended:(BOOL)arg1;
- (void)_dispatchUnloadEvent;
- (BOOL)_isClosed;
- (BOOL)_viewClass:(Class*)arg1 andRepresentationClass:(Class*)arg2 forMIMEType:(id)arg3;
- (void)updateLayoutIgnorePendingStyleSheets;
- (void)_viewWillDrawInternal;
- (id)_initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 frameName:(id)arg2 groupName:(id)arg3 usesDocumentViews:(BOOL)arg4;
- (void)_dispatchPendingLoadRequests;
- (void)_setBrowserUserAgentProductVersion:(id)arg1 buildVersion:(id)arg2 bundleVersion:(id)arg3;
- (id)currentNodeHighlight;
- (BOOL)findString:(id)arg1 options:(unsigned int)arg2;
- (unsigned int)countMatchesForText:(id)arg1 options:(unsigned int)arg2 highlight:(BOOL)arg3 limit:(unsigned int)arg4 markMatches:(BOOL)arg5;
- (void)setSmartInsertDeleteEnabled:(BOOL)arg1;
- (void)_synchronizeCustomFixedPositionLayoutRect;
- (id)backForwardList;
- (void)_locked_recursivelyPerformPlugInSelector:(SEL)arg1 inFrame:(id)arg2;
- (BOOL)_locked_plugInsAreRunningInFrame:(id)arg1;
- (void)setScriptDebugDelegate:(id)arg1;
- (void)setEditingDelegate:(id)arg1;
- (void)setDownloadDelegate:(id)arg1;
- (void)setWebMailDelegate:(id)arg1;
- (void)removeAllCaretChangeListeners;
- (void)setCaretChangeListener:(id)arg1;
- (void)_setUIKitDelegate:(id)arg1;
- (void)_setFormDelegate:(id)arg1;
- (void)caretChanged;
- (int)validationMessageTimerMagnification;
- (BOOL)interactiveFormValidationEnabled;
- (BOOL)_needsUnrestrictedGetMatchedCSSRules;
- (BOOL)_needsPreHTML5ParserQuirks;
- (BOOL)allowsRemoteInspection;
- (id)preferencesIdentifier;
- (void)setHostWindow:(id)arg1;
- (void)_closeWithFastTeardown;
- (void)_clearDelegates;
- (void)_closePluginDatabases;
- (void)setMaintainsBackForwardList:(BOOL)arg1;
- (void)_commonInitializationWithFrameName:(id)arg1 groupName:(id)arg2;
- (void)_preferencesChanged:(id)arg1;
- (void)_preferencesChangedNotification:(id)arg1;
- (void)_wakWindowScreenScaleChanged:(id)arg1;
- (void)_updateScreenScaleFromWindow;
- (void)setApplicationNameForUserAgent:(id)arg1;
- (void)_addToAllWebViewsSet;
- (void)_removeFromAllWebViewsSet;
- (void)setCurrentNodeHighlight:(id)arg1;
- (void)setUIDelegate:(id)arg1;
- (BOOL)canBeRemotelyInspected;
- (id)inspector;
- (id)rectsForTextMatches;
- (void)unmarkAllTextMatches;
- (void)insertText:(id)arg1;
- (void)capitalizeWord:(id)arg1;
- (void)lowercaseWord:(id)arg1;
- (void)uppercaseWord:(id)arg1;
- (void)centerSelectionInVisibleArea:(id)arg1;
- (void)yankAndSelect:(id)arg1;
- (void)yank:(id)arg1;
- (void)unscript:(id)arg1;
- (void)underline:(id)arg1;
- (void)transpose:(id)arg1;
- (void)swapWithMark:(id)arg1;
- (void)superscript:(id)arg1;
- (void)subscript:(id)arg1;
- (void)setMark:(id)arg1;
- (void)selectToMark:(id)arg1;
- (void)selectSentence:(id)arg1;
- (void)selectParagraph:(id)arg1;
- (void)selectLine:(id)arg1;
- (void)pasteAsPlainText:(id)arg1;
- (void)pageUpAndModifySelection:(id)arg1;
- (void)pageUp:(id)arg1;
- (void)pageDownAndModifySelection:(id)arg1;
- (void)pageDown:(id)arg1;
- (void)outdent:(id)arg1;
- (void)moveWordRightAndModifySelection:(id)arg1;
- (void)moveWordRight:(id)arg1;
- (void)moveWordLeftAndModifySelection:(id)arg1;
- (void)moveWordLeft:(id)arg1;
- (void)moveWordForwardAndModifySelection:(id)arg1;
- (void)moveWordForward:(id)arg1;
- (void)moveWordBackwardAndModifySelection:(id)arg1;
- (void)moveWordBackward:(id)arg1;
- (void)moveUpAndModifySelection:(id)arg1;
- (void)moveToRightEndOfLineAndModifySelection:(id)arg1;
- (void)moveToRightEndOfLine:(id)arg1;
- (void)moveToLeftEndOfLineAndModifySelection:(id)arg1;
- (void)moveToLeftEndOfLine:(id)arg1;
- (void)moveToEndOfSentenceAndModifySelection:(id)arg1;
- (void)moveToEndOfSentence:(id)arg1;
- (void)moveToEndOfParagraphAndModifySelection:(id)arg1;
- (void)moveToEndOfParagraph:(id)arg1;
- (void)moveToEndOfLineAndModifySelection:(id)arg1;
- (void)moveToEndOfLine:(id)arg1;
- (void)moveToEndOfDocumentAndModifySelection:(id)arg1;
- (void)moveToEndOfDocument:(id)arg1;
- (void)moveToBeginningOfSentenceAndModifySelection:(id)arg1;
- (void)moveToBeginningOfSentence:(id)arg1;
- (void)moveToBeginningOfParagraphAndModifySelection:(id)arg1;
- (void)moveToBeginningOfParagraph:(id)arg1;
- (void)moveToBeginningOfLineAndModifySelection:(id)arg1;
- (void)moveToBeginningOfLine:(id)arg1;
- (void)moveToBeginningOfDocumentAndModifySelection:(id)arg1;
- (void)moveToBeginningOfDocument:(id)arg1;
- (void)moveRightAndModifySelection:(id)arg1;
- (void)moveRight:(id)arg1;
- (void)moveParagraphForwardAndModifySelection:(id)arg1;
- (void)moveParagraphBackwardAndModifySelection:(id)arg1;
- (void)moveLeftAndModifySelection:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)moveForwardAndModifySelection:(id)arg1;
- (void)moveDownAndModifySelection:(id)arg1;
- (void)moveBackwardAndModifySelection:(id)arg1;
- (void)makeTextWritingDirectionNatural:(id)arg1;
- (void)insertTabIgnoringFieldEditor:(id)arg1;
- (void)insertParagraphSeparator:(id)arg1;
- (void)insertNewlineIgnoringFieldEditor:(id)arg1;
- (void)insertLineBreak:(id)arg1;
- (void)indent:(id)arg1;
- (void)ignoreSpelling:(id)arg1;
- (void)deleteWordForward:(id)arg1;
- (void)deleteWordBackward:(id)arg1;
- (void)deleteToMark:(id)arg1;
- (void)deleteToEndOfParagraph:(id)arg1;
- (void)deleteToEndOfLine:(id)arg1;
- (void)deleteToBeginningOfParagraph:(id)arg1;
- (void)deleteToBeginningOfLine:(id)arg1;
- (void)deleteForward:(id)arg1;
- (void)deleteBackwardByDecomposingPreviousCharacter:(id)arg1;
- (void)alignRight:(id)arg1;
- (void)alignLeft:(id)arg1;
- (void)alignJustified:(id)arg1;
- (void)alignCenter:(id)arg1;
- (BOOL)searchFor:(id)arg1 direction:(BOOL)arg2 caseSensitive:(BOOL)arg3 wrap:(BOOL)arg4;
- (void)selectWord:(id)arg1;
- (BOOL)_isPerformingProgrammaticFocus;
- (id)elementAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (BOOL)searchFor:(id)arg1 direction:(BOOL)arg2 caseSensitive:(BOOL)arg3 wrap:(BOOL)arg4 startInSelection:(BOOL)arg5;
- (BOOL)maintainsInactiveSelection;
- (BOOL)_isUsingAcceleratedCompositing;
- (void)_documentScaleChanged;
- (BOOL)isEditable;
- (void)_resetAllGeolocationPermission;
- (void)_geolocationDidFailWithError:(id)arg1;
- (void)_geolocationDidChangePosition:(id)arg1;
- (id)_geolocationProvider;
- (BOOL)_useFixedLayout;
- (id)_webcore_effectiveFirstResponder;
- (void)scrollLineDown:(id)arg1;
- (void)scrollLineUp:(id)arg1;
- (void)scrollPageDown:(id)arg1;
- (void)scrollPageUp:(id)arg1;
- (void)scrollToEndOfDocument:(id)arg1;
- (void)scrollToBeginningOfDocument:(id)arg1;
- (id)previousValidKeyView;
- (void)setNextKeyView:(id)arg1;
- (id)policyDelegate;
- (id)scriptDebugDelegate;
- (id)mediaStyle;
- (id)_videoProxyPluginForMIMEType:(id)arg1;
- (id)_pluginForMIMEType:(id)arg1;
- (id)_pluginForExtension:(id)arg1;
- (struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_1_1; } x1; })_userAgentString;
- (void)_restorePlugInsFromCache;
- (void)_stopAllPlugInsForPageCache;
- (void)_setGlobalHistoryItem:(struct HistoryItem { int x1; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_2_1; } x_2_1_1; } x2; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_2_1; } x_3_1_1; } x3; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_2_1; } x_4_1_1; } x4; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_2_1; } x_5_1_1; } x5; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_2_1; } x_6_1_1; } x6; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_2_1; } x_7_1_1; } x7; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_2_1; } x_8_1_1; } x8; double x9; boolx10; struct IntPoint { int x_11_1_1; int x_11_1_2; } x11; float x12; struct Vector<WTF::String, 0> { unsigned int x_13_1_1; struct VectorBuffer<WTF::String, 0> { struct String {} *x_2_2_1; unsigned int x_2_2_2; } x_13_1_2; } x13; struct Vector<WTF::RefPtr<WebCore::HistoryItem>, 0> { unsigned int x_14_1_1; struct VectorBuffer<WTF::RefPtr<WebCore::HistoryItem>, 0> { struct RefPtr<WebCore::HistoryItem> {} *x_2_2_1; unsigned int x_2_2_2; } x_14_1_2; } x14; boolx15; boolx16; int x17; struct Vector<int, 0> { unsigned int x_18_1_1; struct VectorBuffer<int, 0> { int *x_2_2_1; unsigned int x_2_2_2; } x_18_1_2; } x18; struct Vector<int, 0> { unsigned int x_19_1_1; struct VectorBuffer<int, 0> { int *x_2_2_1; unsigned int x_2_2_2; } x_19_1_2; } x19; struct OwnPtr<WTF::Vector<WTF::String, 0> > { struct Vector<WTF::String, 0> {} *x_20_1_1; } x20; long long x21; long long x22; struct RefPtr<WebCore::SerializedScriptValue> { struct SerializedScriptValue {} *x_23_1_1; } x23; struct RefPtr<WebCore::FormData> { struct FormData {} *x_24_1_1; } x24; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_2_1; } x_25_1_1; } x25; struct HistoryItem {} *x26; struct HistoryItem {} *x27; struct RefPtr<WebCore::CachedPage> { struct CachedPage {} *x_28_1_1; } x28; float x29; boolx30; struct ViewportArguments { int x_31_1_1; float x_31_1_2; float x_31_1_3; float x_31_1_4; float x_31_1_5; float x_31_1_6; float x_31_1_7; } x31; struct RetainPtr<id> { id x_32_1_1; } x32; struct OwnPtr<WTF::HashMap<WTF::String, WTF::RetainPtr<id>, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::RetainPtr<id>>> > { struct HashMap<WTF::String, WTF::RetainPtr<id>, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::RetainPtr<id>> > {} *x_33_1_1; } x33; }*)arg1;
- (id)_downloadURL:(id)arg1;
- (void)setMainFrameDocumentReady:(BOOL)arg1;
- (double)estimatedProgress;
- (id)_formDelegate;
- (id)_policyDelegateForwarder;
- (id)_webMailDelegate;
- (void)_didCommitLoadForFrame:(id)arg1;
- (void)_removeObjectForIdentifier:(unsigned long)arg1;
- (id)_objectForIdentifier:(unsigned long)arg1;
- (void)_addObject:(id)arg1 forIdentifier:(unsigned long)arg2;
- (struct CGSize { float x1; float x2; })_fixedLayoutSize;
- (id)selectedDOMRange;
- (void)_startAllPlugIns;
- (void)_stopAllPlugIns;
- (BOOL)_includesFlattenedCompositingLayersWhenDrawingToBitmap;
- (BOOL)supportsTextEncoding;
- (BOOL)shouldUpdateWhileOffscreen;
- (void)setDrawsBackground:(BOOL)arg1;
- (BOOL)drawsBackground;
- (void)_setZoomMultiplier:(float)arg1 isTextOnly:(BOOL)arg2;
- (BOOL)_realZoomMultiplierIsTextOnly;
- (float)_realZoomMultiplier;
- (struct Frame { int x1; struct HashSet<WebCore::FrameDestructionObserver *, WTF::PtrHash<WebCore::FrameDestructionObserver *>, WTF::HashTraits<WebCore::FrameDestructionObserver *> > { struct HashTable<WebCore::FrameDestructionObserver *, WebCore::FrameDestructionObserver *, WTF::IdentityExtractor, WTF::PtrHash<WebCore::FrameDestructionObserver *>, WTF::HashTraits<WebCore::FrameDestructionObserver *>, WTF::HashTraits<WebCore::FrameDestructionObserver *> > { struct FrameDestructionObserver {} **x_1_2_1; int x_1_2_2; int x_1_2_3; int x_1_2_4; int x_1_2_5; } x_2_1_1; } x2; struct Page {} *x3; struct FrameTree { struct Frame {} *x_4_1_1; struct Frame {} *x_4_1_2; struct AtomicString { struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_4_1; } x_1_3_1; } x_3_2_1; } x_4_1_3; struct AtomicString { struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_4_1; } x_1_3_1; } x_4_2_1; } x_4_1_4; struct RefPtr<WebCore::Frame> { struct Frame {} *x_5_2_1; } x_4_1_5; struct Frame {} *x_4_1_6; struct RefPtr<WebCore::Frame> { struct Frame {} *x_7_2_1; } x_4_1_7; struct Frame {} *x_4_1_8; unsigned int x_4_1_9; } x4; struct FrameLoader { int (**x_5_1_1)(); struct Frame {} *x_5_1_2; struct FrameLoaderClient {} *x_5_1_3; struct PolicyChecker { struct Frame {} *x_4_2_1; boolx_4_2_2; boolx_4_2_3; int x_4_2_4; struct PolicyCallback { struct ResourceRequest { struct KURL { struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_7_1; } x_1_6_1; } x_1_5_1; unsigned int x_1_5_2 : 1; unsigned int x_1_5_3 : 1; int x_1_5_4; int x_1_5_5; int x_1_5_6; int x_1_5_7; int x_1_5_8; int x_1_5_9; int x_1_5_10; int x_1_5_11; int x_1_5_12; int x_1_5_13; } x_1_4_1; int x_1_4_2; double x_1_4_3; struct KURL { struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_7_1; } x_1_6_1; } x_4_5_1; unsigned int x_4_5_2 : 1; unsigned int x_4_5_3 : 1; int x_4_5_4; int x_4_5_5; int x_4_5_6; int x_4_5_7; int x_4_5_8; int x_4_5_9; int x_4_5_10; int x_4_5_11; int x_4_5_12; int x_4_5_13; } x_1_4_4; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_6_1; } x_5_5_1; } x_1_4_5; struct HTTPHeaderMap { struct HashTable<WTF::AtomicString, std::__1::pair<WTF::AtomicString, WTF::String>, WTF::PairFirstExtractor<std::__1::pair<WTF::AtomicString, WTF::String>>, WTF::CaseFoldingHash, WTF::HashMapValueTraits<WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<WTF::String>>, WTF::HashTraits<WTF::AtomicString> > { struct pair<WTF::AtomicString, WTF::String> {} *x_1_6_1; int x_1_6_2; int x_1_6_3; int x_1_6_4; int x_1_6_5; } x_6_5_1; } x_1_4_6; struct Vector<WTF::String, 0> { unsigned int x_7_5_1; struct VectorBuffer<WTF::String, 0> { struct String {} *x_2_6_1; unsigned int x_2_6_2; } x_7_5_2; } x_1_4_7; struct RefPtr<WebCore::FormData> { struct FormData {} *x_8_5_1; } x_1_4_8; unsigned int x_1_4_9 : 1; unsigned int x_1_4_10 : 1; unsigned int x_1_4_11 : 1; unsigned int x_1_4_12 : 1; unsigned int x_1_4_13 : 1; unsigned int x_1_4_14 : 1; int x_1_4_15; boolx_1_4_16; struct RetainPtr<const _CFURLRequest *> { struct _CFURLRequest {} *x_17_5_1; } x_1_4_17; struct RetainPtr<NSURLRequest> { struct NSURLRequest { Class x_1_6_1; id x_1_6_2; } *x_18_5_1; } x_1_4_18; } x_5_3_1; struct RefPtr<WebCore::FormState> { struct FormState {} *x_2_4_1; } x_5_3_2; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_5_1; } x_3_4_1; } x_5_3_3; struct NavigationAction { struct ResourceRequest { struct KURL { struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_8_1; } x_1_7_1; } x_1_6_1; unsigned int x_1_6_2 : 1; unsigned int x_1_6_3 : 1; int x_1_6_4; int x_1_6_5; int x_1_6_6; int x_1_6_7; int x_1_6_8; int x_1_6_9; int x_1_6_10; int x_1_6_11; int x_1_6_12; int x_1_6_13; } x_1_5_1; int x_1_5_2; double x_1_5_3; struct KURL { struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_8_1; } x_1_7_1; } x_4_6_1; unsigned int x_4_6_2 : 1; unsigned int x_4_6_3 : 1; int x_4_6_4; int x_4_6_5; int x_4_6_6; int x_4_6_7; int x_4_6_8; int x_4_6_9; int x_4_6_10; int x_4_6_11; int x_4_6_12; int x_4_6_13; } x_1_5_4; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_7_1; } x_5_6_1; } x_1_5_5; struct HTTPHeaderMap { struct HashTable<WTF::AtomicString, std::__1::pair<WTF::AtomicString, WTF::String>, WTF::PairFirstExtractor<std::__1::pair<WTF::AtomicString, WTF::String>>, WTF::CaseFoldingHash, WTF::HashMapValueTraits<WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<WTF::String>>, WTF::HashTraits<WTF::AtomicString> > { struct pair<WTF::AtomicString, WTF::String> {} *x_1_7_1; int x_1_7_2; int x_1_7_3; int x_1_7_4; int x_1_7_5; } x_6_6_1; } x_1_5_6; struct Vector<WTF::String, 0> { unsigned int x_7_6_1; struct VectorBuffer<WTF::String, 0> { struct String {} *x_2_7_1; unsigned int x_2_7_2; } x_7_6_2; } x_1_5_7; struct RefPtr<WebCore::FormData> { struct FormData {} *x_8_6_1; } x_1_5_8; unsigned int x_1_5_9 : 1; unsigned int x_1_5_10 : 1; unsigned int x_1_5_11 : 1; unsigned int x_1_5_12 : 1; unsigned int x_1_5_13 : 1; unsigned int x_1_5_14 : 1; int x_1_5_15; boolx_1_5_16; struct RetainPtr<const _CFURLRequest *> { struct _CFURLRequest {} *x_17_6_1; } x_1_5_17; struct RetainPtr<NSURLRequest> { struct NSURLRequest { Class x_1_7_1; id x_1_7_2; } *x_18_6_1; } x_1_5_18; } x_4_4_1; int x_4_4_2; struct RefPtr<WebCore::Event> { struct Event {} *x_3_5_1; } x_4_4_3; } x_5_3_4; int (*x_5_3_5)(); int (*x_5_3_6)(); int (*x_5_3_7)(); void *x_5_3_8; } x_4_2_5; } x_5_1_4; struct HistoryController { struct Frame {} *x_5_2_1; struct RefPtr<WebCore::HistoryItem> { struct HistoryItem {} *x_2_3_1; } x_5_2_2; struct RefPtr<WebCore::HistoryItem> { struct HistoryItem {} *x_3_3_1; } x_5_2_3; struct RefPtr<WebCore::HistoryItem> { struct HistoryItem {} *x_4_3_1; } x_5_2_4; boolx_5_2_5; boolx_5_2_6; struct RefPtr<WebCore::HistoryItem> { struct HistoryItem {} *x_7_3_1; } x_5_2_7; int x_5_2_8; } x_5_1_5; struct ResourceLoadNotifier { struct Frame {} *x_6_2_1; } x_5_1_6; struct SubframeLoader { boolx_7_2_1; struct Frame {} *x_7_2_2; } x_5_1_7; struct FrameLoaderStateMachine { int x_8_2_1; } x_5_1_8; struct IconController { struct Frame {} *x_9_2_1; struct OwnPtr<WebCore::IconLoader> { struct IconLoader {} *x_2_3_1; } x_9_2_2; boolx_9_2_3; } x_5_1_9; int x_5_1_10; int x_5_1_11; struct RefPtr<WebCore::DocumentLoader> { struct DocumentLoader {} *x_12_2_1; } x_5_1_12; struct RefPtr<WebCore::DocumentLoader> { struct DocumentLoader {} *x_13_2_1; } x_5_1_13; struct RefPtr<WebCore::DocumentLoader> { struct DocumentLoader {} *x_14_2_1; } x_5_1_14; boolx_5_1_15; boolx_5_1_16; boolx_5_1_17; boolx_5_1_18; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_3_1; } x_19_2_1; } x_5_1_19; boolx_5_1_20; boolx_5_1_21; boolx_5_1_22; int x_5_1_23; boolx_5_1_24; struct RefPtr<WebCore::SerializedScriptValue> { struct SerializedScriptValue {} *x_25_2_1; } x_5_1_25; boolx_5_1_26; struct KURL { struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_4_1; } x_1_3_1; } x_27_2_1; unsigned int x_27_2_2 : 1; unsigned int x_27_2_3 : 1; int x_27_2_4; int x_27_2_5; int x_27_2_6; int x_27_2_7; int x_27_2_8; int x_27_2_9; int x_27_2_10; int x_27_2_11; int x_27_2_12; int x_27_2_13; } x_5_1_27; struct Timer<WebCore::FrameLoader> { int (**x_28_2_1)(); double x_28_2_2; double x_28_2_3; int x_28_2_4; unsigned int x_28_2_5; struct FrameLoader {} *x_28_2_6; } x_5_1_28; boolx_5_1_29; boolx_5_1_30; struct Frame {} *x_5_1_31; struct HashSet<WebCore::Frame *, WTF::PtrHash<WebCore::Frame *>, WTF::HashTraits<WebCore::Frame *> > { struct HashTable<WebCore::Frame *, WebCore::Frame *, WTF::IdentityExtractor, WTF::PtrHash<WebCore::Frame *>, WTF::HashTraits<WebCore::Frame *>, WTF::HashTraits<WebCore::Frame *> > { struct Frame {} **x_1_3_1; int x_1_3_2; int x_1_3_3; int x_1_3_4; int x_1_3_5; } x_32_2_1; } x_5_1_32; boolx_5_1_33; boolx_5_1_34; boolx_5_1_35; int x_5_1_36; struct RefPtr<WebCore::FrameNetworkingContext> { struct FrameNetworkingContext {} *x_37_2_1; } x_5_1_37; struct KURL { struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_4_1; } x_1_3_1; } x_38_2_1; unsigned int x_38_2_2 : 1; unsigned int x_38_2_3 : 1; int x_38_2_4; int x_38_2_5; int x_38_2_6; int x_38_2_7; int x_38_2_8; int x_38_2_9; int x_38_2_10; int x_38_2_11; int x_38_2_12; int x_38_2_13; } x_5_1_38; struct RefPtr<WebCore::HistoryItem> { struct HistoryItem {} *x_39_2_1; } x_5_1_39; boolx_5_1_40; } x5; struct NavigationScheduler { struct Frame {} *x_6_1_1; struct Timer<WebCore::NavigationScheduler> { int (**x_2_2_1)(); double x_2_2_2; double x_2_2_3; int x_2_2_4; unsigned int x_2_2_5; struct NavigationScheduler {} *x_2_2_6; } x_6_1_2; struct OwnPtr<WebCore::ScheduledNavigation> { struct ScheduledNavigation {} *x_3_2_1; } x_6_1_3; } x6; struct RefPtr<WebCore::DOMWindow> { struct DOMWindow {} *x_7_1_1; } x7; struct HTMLFrameOwnerElement {} *x8; struct RefPtr<WebCore::FrameView> { struct FrameView {} *x_9_1_1; } x9; struct RefPtr<WebCore::Document> { struct Document {} *x_10_1_1; } x10; struct ScriptController { struct HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld>, JSC::Strong<WebCore::JSDOMWindowShell>, WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld>>, WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld>>, WTF::HashTraits<JSC::Strong<WebCore::JSDOMWindowShell>> > { struct HashTable<WTF::RefPtr<WebCore::DOMWrapperWorld>, std::__1::pair<WTF::RefPtr<WebCore::DOMWrapperWorld>, JSC::Strong<WebCore::JSDOMWindowShell>>, WTF::PairFirstExtractor<std::__1::pair<WTF::RefPtr<WebCore::DOMWrapperWorld>, JSC::Strong<WebCore::JSDOMWindowShell>>>, WTF::PtrHash<WTF::RefPtr<WebCore::DOMWrapperWorld>>, WTF::PairHashTraits<WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld>>, WTF::HashTraits<JSC::Strong<WebCore::JSDOMWindowShell>>>, WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld>> > { struct pair<WTF::RefPtr<WebCore::DOMWrapperWorld>, JSC::Strong<WebCore::JSDOMWindowShell> > {} *x_1_3_1; int x_1_3_2; int x_1_3_3; int x_1_3_4; int x_1_3_5; } x_1_2_1; } x_11_1_1; struct Frame {} *x_11_1_2; struct String {} *x_11_1_3; boolx_11_1_4; struct RefPtr<JSC::Bindings::RootObject> { struct RootObject {} *x_5_2_1; } x_11_1_5; struct RefPtr<JSC::Bindings::RootObject> { struct RootObject {} *x_6_2_1; } x_11_1_6; struct HashMap<void *, WTF::RefPtr<JSC::Bindings::RootObject>, WTF::PtrHash<void *>, WTF::HashTraits<void *>, WTF::HashTraits<WTF::RefPtr<JSC::Bindings::RootObject>> > { struct HashTable<void *, std::__1::pair<void *, WTF::RefPtr<JSC::Bindings::RootObject>>, WTF::PairFirstExtractor<std::__1::pair<void *, WTF::RefPtr<JSC::Bindings::RootObject>>>, WTF::PtrHash<void *>, WTF::HashMapValueTraits<WTF::HashTraits<void *>, WTF::HashTraits<WTF::RefPtr<JSC::Bindings::RootObject>>>, WTF::HashTraits<void *> > { struct pair<void *, WTF::RefPtr<JSC::Bindings::RootObject> > {} *x_1_3_1; int x_1_3_2; int x_1_3_3; int x_1_3_4; int x_1_3_5; } x_7_2_1; } x_11_1_7; struct RetainPtr<WebScriptObject> { struct WebScriptObject { Class x_1_3_1; id x_1_3_2; } *x_8_2_1; } x_11_1_8; } x11; struct Editor { struct Frame {} *x_12_1_1; struct OwnPtr<WebCore::DeleteButtonController> { struct DeleteButtonController {} *x_2_2_1; } x_12_1_2; struct RefPtr<WebCore::CompositeEditCommand> { struct CompositeEditCommand {} *x_3_2_1; } x_12_1_3; struct RefPtr<WebCore::Node> { struct Node {} *x_4_2_1; } x_12_1_4; struct RefPtr<WebCore::Text> { struct Text {} *x_5_2_1; } x_12_1_5; unsigned int x_12_1_6; unsigned int x_12_1_7; struct Vector<WebCore::CompositionUnderline, 0> { unsigned int x_8_2_1; struct VectorBuffer<WebCore::CompositionUnderline, 0> { struct CompositionUnderline {} *x_2_3_1; unsigned int x_2_3_2; } x_8_2_2; } x_12_1_8; boolx_12_1_9; boolx_12_1_10; boolx_12_1_11; struct OwnPtr<WebCore::KillRing> { struct KillRing {} *x_12_2_1; } x_12_1_12; struct OwnPtr<WebCore::SpellChecker> { struct SpellChecker {} *x_13_2_1; } x_12_1_13; struct OwnPtr<WebCore::AlternativeTextController> { struct AlternativeTextController {} *x_14_2_1; } x_12_1_14; struct VisibleSelection { struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_4_1; } x_1_3_1; int x_1_3_2; unsigned int x_1_3_3 : 3; unsigned int x_1_3_4 : 1; } x_15_2_1; struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_4_1; } x_2_3_1; int x_2_3_2; unsigned int x_2_3_3 : 3; unsigned int x_2_3_4 : 1; } x_15_2_2; struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_4_1; } x_3_3_1; int x_3_3_2; unsigned int x_3_3_3 : 3; unsigned int x_3_3_4 : 1; } x_15_2_3; struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_4_1; } x_4_3_1; int x_4_3_2; unsigned int x_4_3_3 : 3; unsigned int x_4_3_4 : 1; } x_15_2_4; int x_15_2_5; int x_15_2_6; unsigned int x_15_2_7 : 1; unsigned int x_15_2_8 : 1; } x_12_1_15; boolx_12_1_16; int x_12_1_17; } x12; struct FrameSelection { struct IntRect { struct IntPoint { int x_1_3_1; int x_1_3_2; } x_1_2_1; struct IntSize { int x_2_3_1; int x_2_3_2; } x_1_2_2; } x_13_1_1; boolx_13_1_2; int x_13_1_3; struct Frame {} *x_13_1_4; int x_13_1_5; struct VisibleSelection { struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_4_1; } x_1_3_1; int x_1_3_2; unsigned int x_1_3_3 : 3; unsigned int x_1_3_4 : 1; } x_6_2_1; struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_4_1; } x_2_3_1; int x_2_3_2; unsigned int x_2_3_3 : 3; unsigned int x_2_3_4 : 1; } x_6_2_2; struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_4_1; } x_3_3_1; int x_3_3_2; unsigned int x_3_3_3 : 3; unsigned int x_3_3_4 : 1; } x_6_2_3; struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_4_1; } x_4_3_1; int x_4_3_2; unsigned int x_4_3_3 : 3; unsigned int x_4_3_4 : 1; } x_6_2_4; int x_6_2_5; int x_6_2_6; unsigned int x_6_2_7 : 1; unsigned int x_6_2_8 : 1; } x_13_1_6; struct VisiblePosition { struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_4_1; } x_1_3_1; int x_1_3_2; unsigned int x_1_3_3 : 3; unsigned int x_1_3_4 : 1; } x_7_2_1; int x_7_2_2; } x_13_1_7; int x_13_1_8; struct RefPtr<WebCore::EditingStyle> { struct EditingStyle {} *x_9_2_1; } x_13_1_9; struct Timer<WebCore::FrameSelection> { int (**x_10_2_1)(); double x_10_2_2; double x_10_2_3; int x_10_2_4; unsigned int x_10_2_5; struct FrameSelection {} *x_10_2_6; } x_13_1_10; struct IntRect { struct IntPoint { int x_1_3_1; int x_1_3_2; } x_11_2_1; struct IntSize { int x_2_3_1; int x_2_3_2; } x_11_2_2; } x_13_1_11; struct IntRect { struct IntPoint { int x_1_3_1; int x_1_3_2; } x_12_2_1; struct IntSize { int x_2_3_1; int x_2_3_2; } x_12_2_2; } x_13_1_12; unsigned int x_13_1_13 : 1; unsigned int x_13_1_14 : 1; unsigned int x_13_1_15 : 1; unsigned int x_13_1_16 : 1; unsigned int x_13_1_17 : 1; unsigned int x_13_1_18 : 1; struct Color { unsigned int x_19_2_1; boolx_19_2_2; } x_13_1_19; int x_13_1_20; int x_13_1_21; } x13; struct EventHandler { struct Frame {} *x_14_1_1; boolx_14_1_2; boolx_14_1_3; struct RefPtr<WebCore::Node> { struct Node {} *x_4_2_1; } x_14_1_4; boolx_14_1_5; boolx_14_1_6; int x_14_1_7; struct IntPoint { int x_8_2_1; int x_8_2_2; } x_14_1_8; boolx_14_1_9; boolx_14_1_10; boolx_14_1_11; struct Timer<WebCore::EventHandler> { int (**x_12_2_1)(); double x_12_2_2; double x_12_2_3; int x_12_2_4; unsigned int x_12_2_5; struct EventHandler {} *x_12_2_6; } x_14_1_12; struct Timer<WebCore::EventHandler> { int (**x_13_2_1)(); double x_13_2_2; double x_13_2_3; int x_13_2_4; unsigned int x_13_2_5; struct EventHandler {} *x_13_2_6; } x_14_1_13; struct RenderObject {} *x_14_1_14; boolx_14_1_15; boolx_14_1_16; boolx_14_1_17; struct Timer<WebCore::EventHandler> { int (**x_18_2_1)(); double x_18_2_2; double x_18_2_3; int x_18_2_4; unsigned int x_18_2_5; struct EventHandler {} *x_18_2_6; } x_14_1_18; boolx_14_1_19; struct RefPtr<WebCore::SVGElementInstance> { struct SVGElementInstance {} *x_20_2_1; } x_14_1_20; struct RefPtr<WebCore::SVGElementInstance> { struct SVGElementInstance {} *x_21_2_1; } x_14_1_21; struct RenderLayer {} *x_14_1_22; struct RefPtr<WebCore::Node> { struct Node {} *x_23_2_1; } x_14_1_23; boolx_14_1_24; struct RefPtr<WebCore::Node> { struct Node {} *x_25_2_1; } x_14_1_25; struct RefPtr<WebCore::Node> { struct Node {} *x_26_2_1; } x_14_1_26; struct RefPtr<WebCore::Frame> { struct Frame {} *x_27_2_1; } x_14_1_27; struct RefPtr<WebCore::Scrollbar> { struct Scrollbar {} *x_28_2_1; } x_14_1_28; int x_14_1_29; struct RefPtr<WebCore::Node> { struct Node {} *x_30_2_1; } x_14_1_30; float x_14_1_31; float x_14_1_32; float x_14_1_33; float x_14_1_34; unsigned int x_14_1_35; struct Vector<WTF::RefPtr<WebCore::Touch>, 0> { unsigned int x_36_2_1; struct VectorBuffer<WTF::RefPtr<WebCore::Touch>, 0> { struct RefPtr<WebCore::Touch> {} *x_2_3_1; unsigned int x_2_3_2; } x_36_2_2; } x_14_1_36; struct HashSet<WTF::RefPtr<WebCore::EventTarget>, WTF::PtrHash<WTF::RefPtr<WebCore::EventTarget>>, WTF::HashTraits<WTF::RefPtr<WebCore::EventTarget>> > { struct HashTable<WTF::RefPtr<WebCore::EventTarget>, WTF::RefPtr<WebCore::EventTarget>, WTF::IdentityExtractor, WTF::PtrHash<WTF::RefPtr<WebCore::EventTarget>>, WTF::HashTraits<WTF::RefPtr<WebCore::EventTarget>>, WTF::HashTraits<WTF::RefPtr<WebCore::EventTarget>> > { struct RefPtr<WebCore::EventTarget> {} *x_1_3_1; int x_1_3_2; int x_1_3_3; int x_1_3_4; int x_1_3_5; } x_37_2_1; } x_14_1_37; struct RefPtr<WebCore::Frame> { struct Frame {} *x_38_2_1; } x_14_1_38; struct RefPtr<WebCore::HTMLFrameSetElement> { struct HTMLFrameSetElement {} *x_39_2_1; } x_14_1_39; struct IntSize { int x_40_2_1; int x_40_2_2; } x_14_1_40; struct IntPoint { int x_41_2_1; int x_41_2_2; } x_14_1_41; struct IntPoint { int x_42_2_1; int x_42_2_2; } x_14_1_42; double x_14_1_43; struct PlatformMouseEvent { unsigned int x_44_2_1; unsigned int x_44_2_2; double x_44_2_3; struct IntPoint { int x_4_3_1; int x_4_3_2; } x_44_2_4; struct IntPoint { int x_5_3_1; int x_5_3_2; } x_44_2_5; int x_44_2_6; int x_44_2_7; unsigned int x_44_2_8; } x_14_1_44; boolx_14_1_45; struct RefPtr<WebCore::Node> { struct Node {} *x_46_2_1; } x_14_1_46; boolx_14_1_47; struct RefPtr<WebCore::Node> { struct Node {} *x_48_2_1; } x_14_1_48; id x_14_1_49; boolx_14_1_50; double x_14_1_51; int x_14_1_52; } x14; struct AnimationController { struct OwnPtr<WebCore::AnimationControllerPrivate> { struct AnimationControllerPrivate {} *x_1_2_1; } x_15_1_1; int x_15_1_2; } x15; struct Timer<WebCore::Frame> { int (**x_16_1_1)(); double x_16_1_2; double x_16_1_3; int x_16_1_4; unsigned int x_16_1_5; struct Frame {} *x_16_1_6; } x16; float x17; struct IntPoint { int x_18_1_1; int x_18_1_2; } x18; struct ViewportArguments { int x_19_1_1; float x_19_1_2; float x_19_1_3; float x_19_1_4; float x_19_1_5; float x_19_1_6; float x_19_1_7; } x19; boolx20; struct VisibleSelection { struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_3_1; } x_1_2_1; int x_1_2_2; unsigned int x_1_2_3 : 3; unsigned int x_1_2_4 : 1; } x_21_1_1; struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_3_1; } x_2_2_1; int x_2_2_2; unsigned int x_2_2_3 : 3; unsigned int x_2_2_4 : 1; } x_21_1_2; struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_3_1; } x_3_2_1; int x_3_2_2; unsigned int x_3_2_3 : 3; unsigned int x_3_2_4 : 1; } x_21_1_3; struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_3_1; } x_4_2_1; int x_4_2_2; unsigned int x_4_2_3 : 3; unsigned int x_4_2_4 : 1; } x_21_1_4; int x_21_1_5; int x_21_1_6; unsigned int x_21_1_7 : 1; unsigned int x_21_1_8 : 1; } x21; struct VisibleSelection { struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_3_1; } x_1_2_1; int x_1_2_2; unsigned int x_1_2_3 : 3; unsigned int x_1_2_4 : 1; } x_22_1_1; struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_3_1; } x_2_2_1; int x_2_2_2; unsigned int x_2_2_3 : 3; unsigned int x_2_2_4 : 1; } x_22_1_2; struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_3_1; } x_3_2_1; int x_3_2_2; unsigned int x_3_2_3 : 3; unsigned int x_3_2_4 : 1; } x_22_1_3; struct Position { struct RefPtr<WebCore::Node> { struct Node {} *x_1_3_1; } x_4_2_1; int x_4_2_2; unsigned int x_4_2_3 : 3; unsigned int x_4_2_4 : 1; } x_22_1_4; int x_22_1_5; int x_22_1_6; unsigned int x_22_1_7 : 1; unsigned int x_22_1_8 : 1; } x22; float x23; unsigned int x24; unsigned int x25; unsigned int x26; double x27; double x28; float x29; float x30; int x31; boolx32; boolx33; boolx34; int x35; boolx36; int x37; }*)_mainCoreFrame;
- (void)insertNewline:(id)arg1;
- (void)insertTab:(id)arg1;
- (void)insertBacktab:(id)arg1;
- (void)moveDown:(id)arg1;
- (void)moveUp:(id)arg1;
- (void)deleteBackward:(id)arg1;
- (id)undoManager;
- (BOOL)_isClosing;
- (BOOL)_shouldChangeSelectedDOMRange:(id)arg1 toDOMRange:(id)arg2 affinity:(int)arg3 stillSelecting:(BOOL)arg4;
- (BOOL)isSelectTrailingWhitespaceEnabled;
- (BOOL)smartInsertDeleteEnabled;
- (id)_editingDelegateForwarder;
- (BOOL)isContinuousSpellCheckingEnabled;
- (id)downloadDelegate;
- (id)resourceLoadDelegate;
- (id)_deviceOrientationProvider;
- (id)_formDelegateForSelector:(SEL)arg1;
- (id)_resourceLoadDelegateForwarder;
- (id)_frameLoadDelegateForwarder;
- (id)_UIDelegateForSelector:(SEL)arg1;
- (BOOL)_canShowMIMEType:(id)arg1;
- (BOOL)isLoading;
- (id)_fixedPositionContent;
- (BOOL)_isStopping;
- (void)_scheduleCompositingLayerSync;
- (void)_setNeedsOneShotDrawingSynchronization:(BOOL)arg1;
- (void)_popPerformingProgrammaticFocus;
- (void)_pushPerformingProgrammaticFocus;
- (int)_keyboardUIMode;
- (struct Page { struct HashMap<WTF::AtomicString, WTF::OwnPtr<WebCore::Supplement<WebCore::Page>>, WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<WTF::OwnPtr<WebCore::Supplement<WebCore::Page>>> > { struct HashTable<WTF::AtomicString, std::__1::pair<WTF::AtomicString, WTF::OwnPtr<WebCore::Supplement<WebCore::Page>>>, WTF::PairFirstExtractor<std::__1::pair<WTF::AtomicString, WTF::OwnPtr<WebCore::Supplement<WebCore::Page>>>>, WTF::AtomicStringHash, WTF::HashMapValueTraits<WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<WTF::OwnPtr<WebCore::Supplement<WebCore::Page>>>>, WTF::HashTraits<WTF::AtomicString> > { struct pair<WTF::AtomicString, WTF::OwnPtr<WebCore::Supplement<WebCore::Page>> > {} *x_1_2_1; int x_1_2_2; int x_1_2_3; int x_1_2_4; int x_1_2_5; } x_1_1_1; } x1; struct OwnPtr<WTF::HashSet<WTF::RefPtr<WebCore::SchedulePair>, WebCore::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WebCore::SchedulePair>>> > { struct HashSet<WTF::RefPtr<WebCore::SchedulePair>, WebCore::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WebCore::SchedulePair>> > {} *x_2_1_1; } x2; struct OwnPtr<WebCore::Chrome> { struct Chrome {} *x_3_1_1; } x3; struct OwnPtr<WebCore::DragCaretController> { struct DragCaretController {} *x_4_1_1; } x4; struct OwnPtr<WebCore::FocusController> { struct FocusController {} *x_5_1_1; } x5; struct OwnPtr<WebCore::InspectorController> { struct InspectorController {} *x_6_1_1; } x6; struct RefPtr<WebCore::ScrollingCoordinator> { struct ScrollingCoordinator {} *x_7_1_1; } x7; struct OwnPtr<WebCore::Settings> { struct Settings {} *x_8_1_1; } x8; struct OwnPtr<WebCore::ProgressTracker> { struct ProgressTracker {} *x_9_1_1; } x9; struct OwnPtr<WebCore::BackForwardController> { struct BackForwardController {} *x_10_1_1; } x10; struct RefPtr<WebCore::Frame> { struct Frame {} *x_11_1_1; } x11; struct RefPtr<WebCore::PluginData> { struct PluginData {} *x_12_1_1; } x12; struct RefPtr<WebCore::RenderTheme> { struct RenderTheme {} *x_13_1_1; } x13; struct EditorClient {} *x14; int x15; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_2_1; } x_16_1_1; } x16; boolx17; boolx18; boolx19; unsigned int x20; boolx21; boolx22; boolx23; float x24; float x25; float x26; struct Pagination { int x_27_1_1; boolx_27_1_2; unsigned int x_27_1_3; unsigned int x_27_1_4; } x27; boolx28; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_2_1; } x_29_1_1; } x29; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_2_1; } x_30_1_1; } x30; boolx31; int x32; struct OwnPtr<WebCore::PageGroup> { struct PageGroup {} *x_33_1_1; } x33; struct PageGroup {} *x34; struct Debugger {} *x35; double x36; int x37; boolx38; struct RefPtr<WebCore::StorageNamespace> { struct StorageNamespace {} *x_39_1_1; } x39; int x40; double x41; boolx42; boolx43; unsigned int x44; struct HashSet<WebCore::RenderObject *, WTF::PtrHash<WebCore::RenderObject *>, WTF::HashTraits<WebCore::RenderObject *> > { struct HashTable<WebCore::RenderObject *, WebCore::RenderObject *, WTF::IdentityExtractor, WTF::PtrHash<WebCore::RenderObject *>, WTF::HashTraits<WebCore::RenderObject *>, WTF::HashTraits<WebCore::RenderObject *> > { struct RenderObject {} **x_1_2_1; int x_1_2_2; int x_1_2_3; int x_1_2_4; int x_1_2_5; } x_45_1_1; } x45; struct Region { struct IntRect { struct IntPoint { int x_1_3_1; int x_1_3_2; } x_1_2_1; struct IntSize { int x_2_3_1; int x_2_3_2; } x_1_2_2; } x_46_1_1; struct Shape { struct Vector<int, 32> { unsigned int x_1_3_1; struct VectorBuffer<int, 32> { int *x_2_4_1; unsigned int x_2_4_2; struct AlignedBuffer<128, 4> { BOOL x_3_5_1[128]; } x_2_4_3; } x_1_3_2; } x_2_2_1; struct Vector<WebCore::Region::Span, 16> { unsigned int x_2_3_1; struct VectorBuffer<WebCore::Region::Span, 16> { struct Span {} *x_2_4_1; unsigned int x_2_4_2; struct AlignedBuffer<128, 4> { BOOL x_3_5_1[128]; } x_2_4_3; } x_2_3_2; } x_2_2_2; } x_46_1_2; } x46; struct Region { struct IntRect { struct IntPoint { int x_1_3_1; int x_1_3_2; } x_1_2_1; struct IntSize { int x_2_3_1; int x_2_3_2; } x_1_2_2; } x_47_1_1; struct Shape { struct Vector<int, 32> { unsigned int x_1_3_1; struct VectorBuffer<int, 32> { int *x_2_4_1; unsigned int x_2_4_2; struct AlignedBuffer<128, 4> { BOOL x_3_5_1[128]; } x_2_4_3; } x_1_3_2; } x_2_2_1; struct Vector<WebCore::Region::Span, 16> { unsigned int x_2_3_1; struct VectorBuffer<WebCore::Region::Span, 16> { struct Span {} *x_2_4_1; unsigned int x_2_4_2; struct AlignedBuffer<128, 4> { BOOL x_3_5_1[128]; } x_2_4_3; } x_2_3_2; } x_2_2_2; } x_47_1_2; } x47; boolx48; struct AlternativeTextClient {} *x49; boolx50; }*)page;
- (id)historyDelegate;
- (id)_selectedOrMainFrame;
- (void)_mouseDidMoveOverElement:(id)arg1 modifierFlags:(unsigned int)arg2;
- (void)_closeWindow;
- (void)stopLoading:(id)arg1;
- (void)setGroupName:(id)arg1;
- (id)_UIKitDelegateForwarder;
- (id)_UIKitDelegate;
- (BOOL)_allowsMessaging;
- (id)UIDelegate;
- (id)_UIDelegateForwarder;
- (BOOL)goForward;
- (BOOL)goBack;
- (void)_close;
- (BOOL)usesPageCache;
- (struct CGColor { }*)backgroundColor;
- (id)quickLookContentForURL:(id)arg1;
- (float)textSizeMultiplier;
- (id)preferences;
- (void)setTextSizeMultiplier:(float)arg1;
- (void)setPreferences:(id)arg1;
- (void)setPolicyDelegate:(id)arg1;
- (void)setFrameLoadDelegate:(id)arg1;
- (void)setResourceLoadDelegate:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setUsesPageCache:(BOOL)arg1;
- (id)mainFrame;
- (void)dealloc;
- (void)close;
- (void)finalize;
- (void)setHostApplicationBundleId:(id)arg1 name:(id)arg2;
- (void)setAllowsRemoteInspection:(BOOL)arg1;
- (void)_setUIWebViewUserAgentWithBuildVersion:(id)arg1;
- (id)_touchEventRegions;
- (void)delete:(id)arg1;
- (BOOL)defersCallbacks;
- (id)customUserAgent;
- (unsigned int)_pageCount;
- (void)_setGapBetweenPages:(float)arg1;
- (float)_gapBetweenPages;
- (void)_setPageLength:(float)arg1;
- (float)_pageLength;
- (void)_setPaginationBehavesLikeColumns:(BOOL)arg1;
- (BOOL)_paginationBehavesLikeColumns;
- (void)_setPaginationMode:(int)arg1;
- (int)_paginationMode;
- (BOOL)canGoForward;
- (BOOL)canGoBack;
- (void)goForward:(id)arg1;
- (void)goBack:(id)arg1;
- (BOOL)goToBackForwardItem:(id)arg1;
- (void)reload:(id)arg1;
- (id)stringByEvaluatingJavaScriptFromString:(id)arg1;
- (void)_setFontFallbackPrefersPictographs:(BOOL)arg1;
- (BOOL)_pluginsAreRunning;
- (void)toggleItalic:(id)arg1;
- (void)toggleBold:(id)arg1;
- (void)insertDictationPhrases:(id)arg1 metadata:(id)arg2;
- (id)editingDelegate;
- (void)_overflowScrollPositionChangedTo:(struct CGPoint { float x1; float x2; })arg1 forNode:(id)arg2 isUserScroll:(BOOL)arg3;
- (void)_setCustomFixedPositionLayoutRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)_setCustomFixedPositionLayoutRectInWebThread:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 synchronize:(BOOL)arg2;
- (BOOL)_isProcessingUserGesture;
- (void)_setFixedLayoutSize:(struct CGSize { float x1; float x2; })arg1;
- (void)_setWantsTelephoneNumberParsing:(BOOL)arg1;
- (id)groupName;
- (void)_setNetworkStateIsOnline:(BOOL)arg1;
- (void)setTypingStyle:(id)arg1;
- (id)styleAtSelectionStart;
- (void)applyStyle:(id)arg1;
- (void)moveForward:(id)arg1;
- (void)moveBackward:(id)arg1;
- (void)setContinuousSpellCheckingEnabled:(BOOL)arg1;
- (BOOL)_setMediaLayer:(id)arg1 forPluginView:(id)arg2;
- (void)setSelectedDOMRange:(id)arg1 affinity:(int)arg2;
- (void)setCustomUserAgent:(id)arg1;
- (void)setEditable:(BOOL)arg1;
- (id)initSimpleHTMLDocumentWithStyle:(id)arg1 frame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2 preferences:(id)arg3 groupName:(id)arg4;
- (int)selectionAffinity;
- (void)paste:(id)arg1;
- (void)toggleUnderline:(id)arg1;
- (void)makeTextWritingDirectionLeftToRight:(id)arg1;
- (void)makeTextWritingDirectionRightToLeft:(id)arg1;
- (void)copy:(id)arg1;
- (void)cut:(id)arg1;
- (void)clearText:(id)arg1;
- (id)typingAttributes;
- (void)selectAll:(id)arg1;
- (void)setDefersCallbacks:(BOOL)arg1;
- (id)_quickLookContentFilePath;
- (BOOL)_createSymlinkInDirectory:(id)arg1 pointingToPath:(id)arg2;
- (BOOL)_writeDataAtPath:(id)arg1 asArchive:(BOOL)arg2;
- (oneway void)_webcore_releaseOnWebThread;
- (oneway void)release;

@end
