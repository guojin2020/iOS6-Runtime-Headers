/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator6.0.sdk/System/Library/PrivateFrameworks/GameKitServices.framework/Frameworks/AVConference.framework/AVConference
 */

@class NSObject<OS_xpc_object>, NSObject<OS_dispatch_queue>, NSMutableArray, NSMutableDictionary;

@interface AVConferenceXPCServer : NSObject  {
    NSObject<OS_xpc_object> *listener;
    NSMutableArray *clientConnections;
    NSMutableDictionary *registeredBlocks;
    NSObject<OS_dispatch_queue> *incomingMessageQueue;
    NSObject<OS_dispatch_queue> *outgoingMessageQueue;
    NSObject<OS_dispatch_queue> *clientConnectionsQueue;
}

@property(readonly) NSObject<OS_xpc_object> * listener;
@property(readonly) NSMutableDictionary * registeredBlocks;

+ (id)AVConferenceXPCServerSingleton;

- (void)_xpc_remove_connection_from_list:(id)arg1;
- (void)_xpc_add_connection_to_list:(id)arg1;
- (void)_xpc_start_listening_for_connections;
- (void)appendContextToDictionary:(id)arg1 forConnection:(id)arg2;
- (void)appendPIDToDictionary:(id)arg1 pid:(int)arg2;
- (id)createClientDiedDictionary;
- (void)sendMessageAsync:(char *)arg1 arguments:(id)arg2;
- (void)_xpc_handle_incoming_request:(id)arg1;
- (id)_xpc_get_connection_from_list_for_connection:(id)arg1;
- (id)_xpc_get_connection_from_list_for_context:(id)arg1;
- (id)createXPCDictionaryFromNSDictionary:(id)arg1 forEvent:(id)arg2;
- (void)_xpc_remove_connections_from_list;
- (id)registeredBlocks;
- (id)createNSDictionaryFromNSError:(id)arg1;
- (void)registerBlockForService:(char *)arg1 block:(id)arg2 queue:(id)arg3;
- (id)createNSErrorFromNSDictionary:(id)arg1;
- (id)createNSDictionaryFromXPCDictionary:(id)arg1;
- (void)sendMessageAsync:(char *)arg1 arguments:(id)arg2 context:(id)arg3;
- (void)deregisterFromService:(char *)arg1;
- (void)registerBlockForService:(char *)arg1 block:(id)arg2;
- (id)listener;
- (id)init;
- (void)dealloc;
- (id)allocWithZone:(struct _NSZone { }*)arg1;
- (unsigned int)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (id)copyWithZone:(struct _NSZone { }*)arg1;

@end
