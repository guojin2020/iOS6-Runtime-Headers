/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator6.0.sdk/System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

@class GEOPlace, GEOLatLng, NSMutableArray, GEOPlaceSearchResponse, GEOMapRegion, NSString, GEOPlaceSearchRequest, NSData;

@interface GEOProblem : PBCodable  {
    struct { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; struct { unsigned int x_5_1_1 : 1; unsigned int x_5_1_2 : 1; unsigned int x_5_1_3 : 1; unsigned int x_5_1_4 : 1; } x5; } *_featureHandles;
    unsigned int _featureHandlesCount;
    unsigned int _featureHandlesSpace;
    struct { 
        unsigned long long _high; 
        unsigned long long _low; 
    } _sessionID;
    struct { 
        int *list; 
        unsigned int count; 
        unsigned int size; 
    } _curlProblemTypes;
    struct { 
        int *list; 
        unsigned int count; 
        unsigned int size; 
    } _pinProblemTypes;
    struct { 
        int *list; 
        unsigned int count; 
        unsigned int size; 
    } _problemTypes;
    NSString *_comments;
    NSMutableArray *_correctedFields;
    NSString *_correctedLabelTitle;
    GEOPlace *_correctedPlace;
    GEOLatLng *_correctedPosition;
    NSData *_directionsResponseID;
    GEOMapRegion *_featureRegion;
    NSString *_httpInfo;
    NSString *_incorrectLabelTitle;
    float _mapZoomLevel;
    GEOPlace *_originalPlace;
    GEOLatLng *_pinDrop;
    int _pinType;
    GEOPlaceSearchRequest *_placeSearchRequest;
    GEOPlaceSearchResponse *_placeSearchResponse;
    GEOMapRegion *_region;
    NSString *_syslog;
    NSString *_tileStateLog;
    NSData *_viewportImage;
    NSData *_viewportInfo;
    NSMutableArray *_visibleTileSets;
    struct { 
        unsigned int sessionID : 1; 
        unsigned int mapZoomLevel : 1; 
        unsigned int pinType : 1; 
    } _has;
}

@property(readonly) BOOL hasOriginalPlace;
@property(retain) GEOPlace * originalPlace;
@property BOOL hasSessionID;
@property struct { unsigned long long x1; unsigned long long x2; } sessionID;
@property(readonly) unsigned int problemTypesCount;
@property(readonly) int* problemTypes;
@property(readonly) BOOL hasCorrectedPlace;
@property(retain) GEOPlace * correctedPlace;
@property(readonly) BOOL hasComments;
@property(retain) NSString * comments;
@property(readonly) BOOL hasHttpInfo;
@property(retain) NSString * httpInfo;
@property(readonly) BOOL hasRegion;
@property(retain) GEOMapRegion * region;
@property BOOL hasMapZoomLevel;
@property float mapZoomLevel;
@property(retain) NSMutableArray * visibleTileSets;
@property(readonly) BOOL hasViewportImage;
@property(retain) NSData * viewportImage;
@property(readonly) BOOL hasViewportInfo;
@property(retain) NSData * viewportInfo;
@property(readonly) BOOL hasPinDrop;
@property(retain) GEOLatLng * pinDrop;
@property(readonly) unsigned int pinProblemTypesCount;
@property(readonly) int* pinProblemTypes;
@property(readonly) unsigned int curlProblemTypesCount;
@property(readonly) int* curlProblemTypes;
@property(retain) NSMutableArray * correctedFields;
@property(readonly) BOOL hasCorrectedPosition;
@property(retain) GEOLatLng * correctedPosition;
@property(readonly) BOOL hasPlaceSearchRequest;
@property(retain) GEOPlaceSearchRequest * placeSearchRequest;
@property(readonly) BOOL hasPlaceSearchResponse;
@property(retain) GEOPlaceSearchResponse * placeSearchResponse;
@property(readonly) BOOL hasDirectionsResponseID;
@property(retain) NSData * directionsResponseID;
@property BOOL hasPinType;
@property int pinType;
@property(readonly) BOOL hasSyslog;
@property(retain) NSString * syslog;
@property(readonly) BOOL hasTileStateLog;
@property(retain) NSString * tileStateLog;
@property(readonly) BOOL hasIncorrectLabelTitle;
@property(retain) NSString * incorrectLabelTitle;
@property(readonly) BOOL hasCorrectedLabelTitle;
@property(retain) NSString * correctedLabelTitle;
@property(readonly) BOOL hasFeatureRegion;
@property(retain) GEOMapRegion * featureRegion;
@property(readonly) unsigned int featureHandlesCount;
@property(readonly) struct { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; struct { unsigned int x_5_1_1 : 1; unsigned int x_5_1_2 : 1; unsigned int x_5_1_3 : 1; unsigned int x_5_1_4 : 1; } x5; }* featureHandles;


- (id)correctedFields;
- (id)visibleTileSets;
- (void)setFeatureHandles:(struct { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; struct { unsigned int x_5_1_1 : 1; unsigned int x_5_1_2 : 1; unsigned int x_5_1_3 : 1; unsigned int x_5_1_4 : 1; } x5; }*)arg1 count:(unsigned int)arg2;
- (struct { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; struct { unsigned int x_5_1_1 : 1; unsigned int x_5_1_2 : 1; unsigned int x_5_1_3 : 1; unsigned int x_5_1_4 : 1; } x5; }*)featureHandles;
- (void)setHasPinType:(BOOL)arg1;
- (void)setCurlProblemTypes:(int*)arg1 count:(unsigned int)arg2;
- (int*)curlProblemTypes;
- (void)setPinProblemTypes:(int*)arg1 count:(unsigned int)arg2;
- (int*)pinProblemTypes;
- (void)setHasMapZoomLevel:(BOOL)arg1;
- (void)setProblemTypes:(int*)arg1 count:(unsigned int)arg2;
- (int*)problemTypes;
- (void)addFeatureHandle:(struct { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; struct { unsigned int x_5_1_1 : 1; unsigned int x_5_1_2 : 1; unsigned int x_5_1_3 : 1; unsigned int x_5_1_4 : 1; } x5; })arg1;
- (struct { unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; struct { unsigned int x_5_1_1 : 1; unsigned int x_5_1_2 : 1; unsigned int x_5_1_3 : 1; unsigned int x_5_1_4 : 1; } x5; })featureHandleAtIndex:(unsigned int)arg1;
- (unsigned int)featureHandlesCount;
- (id)featureRegion;
- (BOOL)hasFeatureRegion;
- (id)correctedLabelTitle;
- (BOOL)hasCorrectedLabelTitle;
- (id)incorrectLabelTitle;
- (BOOL)hasIncorrectLabelTitle;
- (id)tileStateLog;
- (BOOL)hasTileStateLog;
- (id)syslog;
- (BOOL)hasSyslog;
- (void)setPinType:(int)arg1;
- (int)pinType;
- (BOOL)hasPinType;
- (id)placeSearchResponse;
- (BOOL)hasPlaceSearchResponse;
- (id)correctedPosition;
- (BOOL)hasCorrectedPosition;
- (id)correctedFieldAtIndex:(unsigned int)arg1;
- (void)clearCorrectedFields;
- (unsigned int)correctedFieldsCount;
- (void)addCurlProblemType:(int)arg1;
- (int)curlProblemTypeAtIndex:(unsigned int)arg1;
- (void)clearCurlProblemTypes;
- (unsigned int)curlProblemTypesCount;
- (void)addPinProblemType:(int)arg1;
- (int)pinProblemTypeAtIndex:(unsigned int)arg1;
- (void)clearPinProblemTypes;
- (unsigned int)pinProblemTypesCount;
- (id)pinDrop;
- (BOOL)hasPinDrop;
- (id)viewportInfo;
- (BOOL)hasViewportInfo;
- (id)viewportImage;
- (BOOL)hasViewportImage;
- (id)visibleTileSetAtIndex:(unsigned int)arg1;
- (void)clearVisibleTileSets;
- (unsigned int)visibleTileSetsCount;
- (void)setMapZoomLevel:(float)arg1;
- (float)mapZoomLevel;
- (BOOL)hasMapZoomLevel;
- (id)region;
- (BOOL)hasRegion;
- (id)httpInfo;
- (BOOL)hasHttpInfo;
- (id)comments;
- (BOOL)hasComments;
- (id)correctedPlace;
- (BOOL)hasCorrectedPlace;
- (void)addProblemType:(int)arg1;
- (int)problemTypeAtIndex:(unsigned int)arg1;
- (void)clearProblemTypes;
- (unsigned int)problemTypesCount;
- (id)originalPlace;
- (BOOL)hasOriginalPlace;
- (void)addCorrectedField:(id)arg1;
- (void)addVisibleTileSet:(id)arg1;
- (void)clearFeatureHandles;
- (void)setFeatureRegion:(id)arg1;
- (void)setCorrectedLabelTitle:(id)arg1;
- (void)setIncorrectLabelTitle:(id)arg1;
- (void)setTileStateLog:(id)arg1;
- (void)setSyslog:(id)arg1;
- (void)setPlaceSearchResponse:(id)arg1;
- (void)setCorrectedPosition:(id)arg1;
- (void)setCorrectedFields:(id)arg1;
- (void)setPinDrop:(id)arg1;
- (void)setViewportInfo:(id)arg1;
- (void)setViewportImage:(id)arg1;
- (void)setVisibleTileSets:(id)arg1;
- (void)setRegion:(id)arg1;
- (void)setHttpInfo:(id)arg1;
- (void)setComments:(id)arg1;
- (void)setCorrectedPlace:(id)arg1;
- (void)setOriginalPlace:(id)arg1;
- (id)directionsResponseID;
- (BOOL)hasDirectionsResponseID;
- (void)setDirectionsResponseID:(id)arg1;
- (void)copyTo:(id)arg1;
- (void)setHasSessionID:(BOOL)arg1;
- (id)placeSearchRequest;
- (BOOL)hasPlaceSearchRequest;
- (void)setSessionID:(struct { unsigned long long x1; unsigned long long x2; })arg1;
- (struct { unsigned long long x1; unsigned long long x2; })sessionID;
- (BOOL)hasSessionID;
- (void)setPlaceSearchRequest:(id)arg1;
- (BOOL)readFrom:(id)arg1;
- (void)writeTo:(id)arg1;
- (void)dealloc;
- (BOOL)isEqual:(id)arg1;
- (unsigned int)hash;
- (id)description;
- (id)dictionaryRepresentation;

@end
