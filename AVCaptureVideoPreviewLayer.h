/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator6.0.sdk/System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

@class NSString, AVCaptureVideoPreviewLayerInternal, AVCaptureConnection, AVCaptureSession;

@interface AVCaptureVideoPreviewLayer : CALayer  {
    AVCaptureVideoPreviewLayerInternal *_internal;
}

@property(retain) AVCaptureSession * session;
@property(readonly) AVCaptureConnection * connection;
@property(copy) NSString * videoGravity;
@property(getter=isOrientationSupported,readonly) BOOL orientationSupported;
@property int orientation;
@property(getter=isMirroringSupported,readonly) BOOL mirroringSupported;
@property BOOL automaticallyAdjustsMirroring;
@property(getter=isMirrored) BOOL mirrored;

+ (id)layerWithSession:(id)arg1;
+ (void)initialize;

- (id)transformedMetadataObjectForMetadataObject:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })rectForMetadataObject:(id)arg1;
- (struct CGPoint { float x1; float x2; })pointForCaptureDevicePointOfInterest:(struct CGPoint { float x1; float x2; })arg1;
- (struct CGPoint { float x1; float x2; })captureDevicePointOfInterestForPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)activeConnections;
- (void)setMirrored:(BOOL)arg1;
- (BOOL)isMirrored;
- (void)setAutomaticallyAdjustsMirroring:(BOOL)arg1;
- (BOOL)isOrientationSupported;
- (id)subLayer;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })rectForCaptureDeviceFaceRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (BOOL)isChromaNoiseReductionSupported;
- (BOOL)isMirroringSupported;
- (void)_updateCaptureDeviceTransform;
- (BOOL)_isMirrored;
- (BOOL)_automaticallyAdjustsMirroring;
- (int)_orientation;
- (id)videoGravity;
- (void)setVideoGravity:(id)arg1;
- (void)centerSublayer;
- (id)initWithSession:(id)arg1;
- (BOOL)automaticallyAdjustsMirroring;
- (float)previewRotationDegrees;
- (BOOL)isChromaNoiseReductionEnabled;
- (void)setChromaNoiseReductionEnabled:(BOOL)arg1;
- (void)removeConnection:(id)arg1;
- (id)addConnection:(id)arg1 error:(id*)arg2;
- (BOOL)canAddConnectionForMediaType:(id)arg1;
- (id)connections;
- (id)notReadyError;
- (void)bumpChangeSeed;
- (int)changeSeed;
- (void)didStartForSession:(id)arg1;
- (void)didStopForSession:(id)arg1 error:(id)arg2;
- (void)handleEnabledChangedForConnection:(id)arg1;
- (id)connectionMediaTypes;
- (void)_applyOverridesToCaptureOptions:(id)arg1;
- (void)setSession:(id)arg1;
- (id)liveConnections;
- (id)session;
- (void)setHidden:(BOOL)arg1;
- (void)setOrientation:(int)arg1;
- (void)layoutSublayers;
- (void)layerDidBecomeVisible:(BOOL)arg1;
- (id)initWithLayer:(id)arg1;
- (void)setBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)init;
- (void)dealloc;
- (id)_input;
- (void)setPaused:(BOOL)arg1;
- (int)orientation;
- (BOOL)isPaused;
- (id)connection;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;

@end
