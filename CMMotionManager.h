/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator6.0.sdk/System/Library/Frameworks/CoreMotion.framework/CoreMotion
 */

@class CMGyroData, CMMagnetometerData, CMDeviceMotion, CMAccelerometerData;

@interface CMMotionManager : NSObject  {
    id _internal;
}

@property double accelerometerUpdateInterval;
@property(getter=isAccelerometerAvailable,readonly) BOOL accelerometerAvailable;
@property(getter=isAccelerometerActive,readonly) BOOL accelerometerActive;
@property(readonly) CMAccelerometerData * accelerometerData;
@property double gyroUpdateInterval;
@property(getter=isGyroAvailable,readonly) BOOL gyroAvailable;
@property(getter=isGyroActive,readonly) BOOL gyroActive;
@property(readonly) CMGyroData * gyroData;
@property double magnetometerUpdateInterval;
@property(getter=isMagnetometerAvailable,readonly) BOOL magnetometerAvailable;
@property(getter=isMagnetometerActive,readonly) BOOL magnetometerActive;
@property(readonly) CMMagnetometerData * magnetometerData;
@property double deviceMotionUpdateInterval;
@property(readonly) int attitudeReferenceFrame;
@property(getter=isDeviceMotionAvailable,readonly) BOOL deviceMotionAvailable;
@property(getter=isDeviceMotionActive,readonly) BOOL deviceMotionActive;
@property(readonly) CMDeviceMotion * deviceMotion;
@property BOOL showsDeviceMovementDisplay;

+ (unsigned int)availableAttitudeReferenceFrames;
+ (id)sharedManager;

- (void)stopMagnetometerUpdates;
- (void)startMagnetometerUpdates;
- (void)startMagnetometerUpdatesToQueue:(id)arg1 withHandler:(id)arg2;
- (id)magnetometerData;
- (double)magnetometerUpdateInterval;
- (void)setMagnetometerUpdateInterval:(double)arg1;
- (BOOL)isMagnetometerActive;
- (BOOL)isMagnetometerAvailable;
- (void)dismissDeviceMovementDisplay;
- (BOOL)showsDeviceMovementDisplay;
- (void)setShowsDeviceMovementDisplay:(BOOL)arg1;
- (void)startDeviceMotionUpdatesUsingReferenceFrame:(int)arg1 toQueue:(id)arg2 withHandler:(id)arg3;
- (void)startDeviceMotionUpdatesUsingReferenceFrame:(int)arg1;
- (void)startDeviceMotionUpdatesToQueue:(id)arg1 withHandler:(id)arg2;
- (int)attitudeReferenceFrame;
- (double)deviceMotionUpdateInterval;
- (BOOL)isDeviceMotionActive;
- (void)stopGyroUpdates;
- (void)startGyroUpdatesToQueue:(id)arg1 withHandler:(id)arg2;
- (void)startGyroUpdates;
- (id)gyroData;
- (double)gyroUpdateInterval;
- (void)setGyroUpdateInterval:(double)arg1;
- (BOOL)isGyroActive;
- (BOOL)isGyroAvailable;
- (double)accelerometerUpdateInterval;
- (BOOL)isAccelerometerActive;
- (void)startAccelerometerUpdatesToQueue:(id)arg1 withHandler:(id)arg2;
- (BOOL)isAccelerometerAvailable;
- (id)accelerometerData;
- (id)deviceMotion;
- (void)startAccelerometerUpdates;
- (void)startDeviceMotionUpdates;
- (void)setAccelerometerUpdateInterval:(double)arg1;
- (void)setDeviceMotionUpdateInterval:(double)arg1;
- (BOOL)isDeviceMotionAvailable;
- (void)stopAccelerometerUpdates;
- (void)stopDeviceMotionUpdates;
- (id)init;
- (void)dealloc;

@end
