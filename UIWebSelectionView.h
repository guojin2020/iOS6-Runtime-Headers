/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator6.0.sdk/System/Library/Frameworks/UIKit.framework/UIKit
 */

@class UIWebSelectionNode, UIWebSelectionHandle, UIWebSelectionOutline, UIWebTextRangeView, UIWebSelectionGraph, NSTimer, UIView, UIWebDocumentView, UIWebSelection;

@interface UIWebSelectionView : UIView  {
    UIView *_center;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } _selectionFrame;
    UIWebSelectionHandle *_top;
    UIWebSelectionHandle *_right;
    UIWebSelectionHandle *_bottom;
    UIWebSelectionHandle *_left;
    UIWebSelectionOutline *_outline;
    UIWebTextRangeView *_textRangeView;
    UIWebDocumentView *_documentView;
    UIWebSelectionNode *_selectionNode;
    UIWebSelectionGraph *_selectionGraph;
    float _growThreshold;
    float _shrinkThreshold;
    struct { 
        UIWebSelectionHandle *scrollingHandle; 
        double startTime; 
        int direction; 
        NSTimer *timer; 
    } _autoscrollData;
    struct { 
        UIWebSelectionHandle *activeHandle; 
        struct CGPoint { 
            float x; 
            float y; 
        } handleCenterStart; 
        float handleOffset; 
    } _blockSelectionData;
    struct { 
        UIWebSelectionHandle *start; 
        UIWebSelectionHandle *end; 
        struct CGSize { 
            float width; 
            float height; 
        } startingOffset; 
        BOOL anchorAtStart; 
        struct { 
            BOOL flipPossible; 
            BOOL rectsChanged; 
            struct CGRect { 
                struct CGPoint { 
                    float x; 
                    float y; 
                } origin; 
                struct CGSize { 
                    float width; 
                    float height; 
                } size; 
            } originalSelectionRect; 
        } flipData; 
    } _rangedSelectionData;
    BOOL _creatingSelection;
    int _nestedLayoutCalls;
    BOOL _calloutBarIsHiddenBeforeRotation;
    BOOL _rotating;
    int _selectionInFixedPosition;
}

@property(readonly) UIWebSelection * selection;
@property(retain) UIWebSelectionNode * selectionNode;
@property struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } selectionFrame;


- (void)removeFromSuperview;
- (void)dealloc;
- (BOOL)canFlip;
- (void)touchChanged:(id)arg1 forHandleInText:(id)arg2;
- (void)setSelectionFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 animated:(BOOL)arg2;
- (void)calloutBar:(id)arg1 selectedCommand:(id)arg2;
- (void)updateForChangedLayoutWhileManipulatingBlockSelectionHandle;
- (BOOL)activelyManipulatingBlockSelectionHandle;
- (void)updateForChangedLayoutWhileManipulatingTextSelectionHandle;
- (BOOL)activelyManipulatingTextSelectionHandle;
- (id)activeHandle;
- (void)updateFrameAndHandlesWithAnimation:(BOOL)arg1;
- (id)nodeInPristineGraphAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)resetSelection;
- (void)shiftWebRangeSelectionAnimationDidStop:(id)arg1 finished:(id)arg2;
- (void)touchChanged:(id)arg1 forHandle:(id)arg2;
- (void)autoscrollTimerFired:(id)arg1;
- (int)autoscrollDirectionsForHandle:(id)arg1;
- (id)selectionNode;
- (BOOL)isHorizontalWritingMode;
- (void)animateSloppyReleaseOfHandleInText:(id)arg1 withMagnifier:(id)arg2;
- (void)switchToBlockModeForHandle:(id)arg1;
- (BOOL)shouldSwitchToBlockModeForHandle:(id)arg1;
- (void)setOrientationOfMagnifier:(id)arg1 forHandleInText:(id)arg2;
- (void)considerFlipping;
- (void)stopAnyAutoscrolling;
- (void)updateAutoscrollForHandle:(id)arg1;
- (void)switchToTextModeForHandle:(id)arg1;
- (void)contractForActiveHandle;
- (BOOL)shouldContractForActiveHandle;
- (void)expandForActiveHandle;
- (BOOL)shouldExpandForActiveHandle;
- (void)computeExpandAndContractThresholdsForActiveHandle;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })desiredBox;
- (void)setSelectionNode:(id)arg1;
- (void)setSelectionFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })fetchSelectionBoundingRect;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })fetchSelectionBoundingTextSelectionRect;
- (void)setHandleCenters;
- (void)hideCopyCallout;
- (id)handles;
- (void)showCopyCalloutWithAnimation:(BOOL)arg1;
- (void)updateTextRangeViewSelectionRects;
- (void)onAfterScrollOrZoomShowingSelection:(BOOL)arg1;
- (void)onBeforeScrollOrZoomHidingSelection:(BOOL)arg1;
- (void)showControls;
- (BOOL)updateRectForCalloutBar:(id)arg1 inWindow:(id)arg2;
- (id)handleWithPosition:(int)arg1;
- (id)tintView;
- (void)showControlsAfterRotation;
- (void)hideControlsBeforeRotation;
- (void)endSelectionCreationWithPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)updateSelectionCreationWithPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)startSelectionCreationWithPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)hideControls;
- (id)initWithWebDocumentView:(id)arg1;
- (void)didEndScrollingOrZoomingPage;
- (void)willStartScrollingOrZoomingPage;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })selectionFrame;
- (void)scaleChanged;
- (void)didEndScrollingOverflow;
- (void)willStartScrollingOverflow;
- (void)layoutChangedByScrolling:(BOOL)arg1;
- (void)selectionChanged;
- (void)clearSelection;
- (id)selection;
- (void)updateSelectionRects;
- (void)_didScroll;
- (void)_subscribeToScrollNotificationsIfNecessary:(id)arg1;
- (id)hitTest:(struct CGPoint { float x1; float x2; })arg1 withEvent:(id)arg2;

@end
