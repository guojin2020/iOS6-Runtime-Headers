/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator6.0.sdk/System/Library/Frameworks//MediaPlayer.framework/MediaPlayer
 */

@class UIImageView, UILabel, NSTimer, MPAVController, NSString, UIView;

@interface MPVolumeSlider : UISlider  {
    NSTimer *_commitTimer;
    MPAVController *_player;
    UILabel *_routeNameLabel;
    int _style;
    UIImageView *_thumbImageView;
    UIImageView *_thumbMaskImageView;
    NSString *_volumeAudioCategory;
    BOOL _isOffScreen;
    BOOL _volumeWarningEnabled;
    UIView *_volumeWarningView;
    int _volumeWarningState;
    float _EUVolumeLimit;
    BOOL _volumeWarningBlinking;
}

@property(readonly) int style;
@property(retain) MPAVController * player;
@property(copy) NSString * volumeAudioCategory;
@property(setter=_setIsOffScreen:) BOOL _isOffScreen;


- (BOOL)_isOffScreen;
- (void)_setIsOffScreen:(BOOL)arg1;
- (void)setVolumeAudioCategory:(id)arg1;
- (void)_blinkWarningView;
- (void)_routeNameLabelAnimationDidEnd;
- (float)_volumeFromAVController;
- (void)_beginBlinkingWarningView;
- (void)_updateVolumeFromAVController;
- (void)_layoutForAvailableRoutes;
- (void)_layoutMaskForThumb;
- (void)_endTracking;
- (void)_commitVolumeChange;
- (id)volumeAudioCategory;
- (void)_layoutVolumeWarningView;
- (void)_endBlinkingWarningView;
- (void)_applicationWillEnterForegroundNotification:(id)arg1;
- (void)_applicationDidEnterBackgroundNotification:(id)arg1;
- (void)_volumeDidChange:(id)arg1;
- (void)_EUVolumeLimitEnforcedDidChange:(id)arg1;
- (void)_EUVolumeLimitDidChange:(id)arg1;
- (void)_systemMuteDidChange:(id)arg1;
- (void)_systemVolumeDidChange:(id)arg1;
- (id)_maxTrackImageForStyle:(int)arg1;
- (id)_minTrackImageForStyle:(int)arg1;
- (id)_thumbImageForStyle:(int)arg1;
- (void)_availableRoutesDidChangeNotification:(id)arg1;
- (void)_isAirPlayVideoActiveDidChangeNotification:(id)arg1;
- (id)player;
- (void)setPlayer:(id)arg1;
- (void)setHidden:(BOOL)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (int)style;
- (void)dealloc;
- (void)setValue:(float)arg1 animated:(BOOL)arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })thumbRectForBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 trackRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2 value:(float)arg3;
- (float)maximumValue;
- (float)minimumValue;
- (id)createThumbView;
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (BOOL)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (void)cancelTrackingWithEvent:(id)arg1;
- (void)didMoveToSuperview;
- (BOOL)pointInside:(struct CGPoint { float x1; float x2; })arg1 withEvent:(id)arg2;
- (struct CGSize { float x1; float x2; })sizeThatFits:(struct CGSize { float x1; float x2; })arg1;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 style:(int)arg2;
- (void)didMoveToWindow;
- (void)setAlpha:(float)arg1;
- (void)setUserInteractionEnabled:(BOOL)arg1;

@end
