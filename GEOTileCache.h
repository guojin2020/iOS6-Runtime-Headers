/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator6.0.sdk/System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

@interface GEOTileCache : NSObject  {
    struct mutex { 
        struct _opaque_pthread_mutex_t { 
            long __sig; 
            BOOL __opaque[40]; 
        } __m_; 
    } _lock;
    struct list<CacheItem, std::__1::allocator<CacheItem> > { 
        struct __list_node_base<CacheItem, void *> { 
            struct __list_node<CacheItem, void *> {} *__prev_; 
            struct __list_node<CacheItem, void *> {} *__next_; 
        } __end_; 
        struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<CacheItem, void *>> > { 
            unsigned long __first_; 
        } __size_alloc_; 
    } _list;
    struct unordered_map<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>, hashkey, eqkey, std::__1::allocator<std::__1::pair<const _GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>> > { 
        struct __hash_table<std::__1::pair<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, std::__1::__unordered_map_hasher<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>, hashkey, true>, std::__1::__unordered_map_equal<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>, eqkey, true>, std::__1::allocator<std::__1::pair<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>> > { 
            struct unique_ptr<std::__1::__hash_node<std::__1::pair<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, void *> *>> > { 
                struct __compressed_pair<std::__1::__hash_node<std::__1::pair<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, void *> *>> > { 
                    struct __hash_node<std::__1::pair<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, void *> {} **__first_; 
                    struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, void *> *> > { 
                        struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, void *> *> > { 
                            unsigned long __first_; 
                        } __data_; 
                    } __second_; 
                } __ptr_; 
            } __bucket_list_; 
            struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, void *>> > { 
                struct __hash_node_base<std::__1::__hash_node<std::__1::pair<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, void *> *> { 
                    struct __hash_node<std::__1::pair<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>>, void *> {} *__next_; 
                } __first_; 
            } __p1_; 
            struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>, hashkey, true> > { 
                unsigned long __first_; 
            } __p2_; 
            struct __compressed_pair<float, std::__1::__unordered_map_equal<_GEOTileKey, std::__1::__list_iterator<CacheItem, void *>, eqkey, true> > { 
                float __first_; 
            } __p3_; 
        } __table_; 
    } _map;
    unsigned int _maxCapacity;
    unsigned int _maxCost;
    unsigned int _currentCost;
    unsigned int _currentCount;
}

@property unsigned int maxCapacity;
@property unsigned int maxCost;


- (void)removeTilesMatchingPredicate:(id)arg1;
- (void)removeTilesWithKeys:(id)arg1;
- (void)removeTileForKey:(const struct _GEOTileKey { unsigned int x1 : 6; unsigned int x2 : 26; unsigned int x3 : 26; unsigned int x4 : 6; unsigned int x5 : 8; unsigned int x6 : 8; unsigned int x7 : 8; unsigned int x8 : 1; unsigned int x9 : 7; unsigned char x10[4]; }*)arg1;
- (unsigned int)maxCost;
- (unsigned int)maxCapacity;
- (void)enumerate:(id)arg1;
- (void)_removeTileForKey:(const struct _GEOTileKey { unsigned int x1 : 6; unsigned int x2 : 26; unsigned int x3 : 26; unsigned int x4 : 6; unsigned int x5 : 8; unsigned int x6 : 8; unsigned int x7 : 8; unsigned int x8 : 1; unsigned int x9 : 7; unsigned char x10[4]; }*)arg1;
- (void)_evictWithMaxCost:(unsigned int)arg1 maxCapacity:(unsigned int)arg2;
- (void)_receivedMemoryNotification:(id)arg1;
- (void)_enteredBackground:(id)arg1;
- (void)setNullForKey:(const struct _GEOTileKey { unsigned int x1 : 6; unsigned int x2 : 26; unsigned int x3 : 26; unsigned int x4 : 6; unsigned int x5 : 8; unsigned int x6 : 8; unsigned int x7 : 8; unsigned int x8 : 1; unsigned int x9 : 7; unsigned char x10[4]; }*)arg1;
- (void)setTile:(id)arg1 forKey:(const struct _GEOTileKey { unsigned int x1 : 6; unsigned int x2 : 26; unsigned int x3 : 26; unsigned int x4 : 6; unsigned int x5 : 8; unsigned int x6 : 8; unsigned int x7 : 8; unsigned int x8 : 1; unsigned int x9 : 7; unsigned char x10[4]; }*)arg2 cost:(unsigned int)arg3;
- (id)tileForKey:(const struct _GEOTileKey { unsigned int x1 : 6; unsigned int x2 : 26; unsigned int x3 : 26; unsigned int x4 : 6; unsigned int x5 : 8; unsigned int x6 : 8; unsigned int x7 : 8; unsigned int x8 : 1; unsigned int x9 : 7; unsigned char x10[4]; }*)arg1;
- (void)setMaxCapacity:(unsigned int)arg1;
- (void)setMaxCost:(unsigned int)arg1;
- (id)init;
- (void)dealloc;
- (void)removeAllObjects;
- (void).cxx_destruct;
- (id).cxx_construct;
- (id)description;
- (id)_description;

@end
