/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator6.0.sdk/System/Library/Frameworks/GameKit.framework/GameKit
 */

@class GKMatchRequest, GKButton, GKCollectionView, UIAlertView, UILabel, NSDictionary, NSString, GKMultiplayerCollectionViewLayout, NSArray;

@interface GKMultiplayerViewController : UICollectionViewController <UICollectionViewDelegate, UICollectionViewDataSource, UICollectionViewDelegateFlowLayout, GKFriendPickerViewControllerDelegate> {
    GKMatchRequest *_matchRequest;
    NSArray *_participants;
    struct _NSRange { 
        unsigned int location; 
        unsigned int length; 
    } _participantsRange;
    int _maxParticipants;
    int _status;
    int _numberInvited;
    int _numberInvitesRemaining;
    int _numberAccepted;
    BOOL _hosted;
    NSString *_defaultInvitationMessage;
    Class _contentsClass;
    NSDictionary *_contentsKeymap;
    BOOL _didLayout;
    struct UIEdgeInsets { 
        float top; 
        float left; 
        float bottom; 
        float right; 
    } _topSectionInsets;
    struct UIEdgeInsets { 
        float top; 
        float left; 
        float bottom; 
        float right; 
    } _participantSectionInsets;
    float _participantGap;
    struct CGSize { 
        float width; 
        float height; 
    } _buttonSize;
    struct CGSize { 
        float width; 
        float height; 
    } _buttonGap;
    struct CGSize { 
        float width; 
        float height; 
    } _statusSize;
    BOOL _setupNotifications;
    UIAlertView *_alert;
    GKButton *_playNowButton;
    NSString *_infoText;
    GKButton *_inviteButton;
    struct UIEdgeInsets { 
        float top; 
        float left; 
        float bottom; 
        float right; 
    } _infoInsets;
    float _infoWidth;
    UILabel *_infoLabel;
}

@property(copy) GKMatchRequest * matchRequest;
@property(retain) NSArray * participants;
@property struct _NSRange { unsigned int x1; unsigned int x2; } participantsRange;
@property int maxParticipants;
@property int status;
@property NSString * infoText;
@property int numberInvited;
@property int numberInvitesRemaining;
@property int numberAccepted;
@property(getter=isHosted) BOOL hosted;
@property(copy) NSString * defaultInvitationMessage;
@property Class contentsClass;
@property(retain) NSDictionary * contentsKeymap;
@property(readonly) GKCollectionView * gkCollectionView;
@property BOOL didLayout;
@property struct UIEdgeInsets { float x1; float x2; float x3; float x4; } topSectionInsets;
@property struct UIEdgeInsets { float x1; float x2; float x3; float x4; } participantSectionInsets;
@property float participantGap;
@property struct CGSize { float x1; float x2; } buttonSize;
@property struct CGSize { float x1; float x2; } buttonGap;
@property struct CGSize { float x1; float x2; } statusSize;
@property float infoWidth;
@property struct UIEdgeInsets { float x1; float x2; float x3; float x4; } infoInsets;
@property BOOL setupNotifications;
@property UIAlertView * alert;
@property(retain) GKButton * inviteButton;
@property(retain) GKButton * playNowButton;
@property(retain) UILabel * infoLabel;
@property(readonly) GKMultiplayerCollectionViewLayout * gkCollectionViewLayout;


- (void)setInfoWidth:(float)arg1;
- (float)infoWidth;
- (void)setInfoInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })infoInsets;
- (id)infoText;
- (void)setSetupNotifications:(BOOL)arg1;
- (void)setParticipantSectionInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })participantSectionInsets;
- (void)setTopSectionInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })topSectionInsets;
- (void)setDidLayout:(BOOL)arg1;
- (BOOL)didLayout;
- (id)contentsKeymap;
- (Class)contentsClass;
- (struct _NSRange { unsigned int x1; unsigned int x2; })participantsRange;
- (void)participantAdded:(id)arg1;
- (void)configureStatusView:(id)arg1;
- (void)updateParticipants;
- (void)showFriendPicker;
- (id)playNowButton;
- (void)setPlayNowButton:(id)arg1;
- (void)setInviteButton:(id)arg1;
- (void)setupCollectionView;
- (BOOL)canCancelParticipant:(id)arg1 atIndex:(int)arg2;
- (void)scrollUpFromBottom;
- (void)scrollBottom;
- (void)layoutSubviewsForInterfaceOrientation:(int)arg1;
- (void)updateButtonState;
- (id)gkCollectionViewLayout;
- (void)setContentsKeymap:(id)arg1;
- (void)setContentsClass:(Class)arg1;
- (void)setParticipantGap:(float)arg1;
- (float)participantGap;
- (void)setButtonGap:(struct CGSize { float x1; float x2; })arg1;
- (struct CGSize { float x1; float x2; })buttonGap;
- (void)setButtonSize:(struct CGSize { float x1; float x2; })arg1;
- (struct CGSize { float x1; float x2; })buttonSize;
- (void)setStatusSize:(struct CGSize { float x1; float x2; })arg1;
- (struct CGSize { float x1; float x2; })statusSize;
- (BOOL)shouldShowInfoLabel;
- (void)setMatchRequest:(id)arg1;
- (id)defaultInvitationMessage;
- (void)setDefaultInvitationMessage:(id)arg1;
- (BOOL)supportsNearbyPlayers;
- (int)maxParticipants;
- (void)participantCanceled:(id)arg1;
- (void)revertToEmptyParticipant:(id)arg1;
- (void)revertToEmptyParticipant:(id)arg1 animated:(BOOL)arg2;
- (void)findPlayersIfNeeded;
- (void)updateParticipant:(id)arg1;
- (void)setInfoText:(id)arg1;
- (void)authenticatedStatusChanged:(id)arg1;
- (void)sendStatusUpdate;
- (int)numberAccepted;
- (id)localParticipant;
- (void)setNumberAccepted:(int)arg1;
- (void)updateUIAndReload:(BOOL)arg1;
- (void)setHosted:(BOOL)arg1;
- (void)setupParticipants;
- (void)setParticipantsRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg1;
- (void)setMaxParticipants:(int)arg1;
- (id)initWithMatchRequest:(id)arg1;
- (id)participantWithID:(id)arg1;
- (BOOL)isHosted;
- (void)setParticipants:(id)arg1;
- (id)participants;
- (void)playNow;
- (void)updateUI;
- (void)setNumberInvitesRemaining:(int)arg1;
- (int)numberInvitesRemaining;
- (void)setNumberInvited:(int)arg1;
- (int)numberInvited;
- (id)addPlayers:(id)arg1;
- (id)invitedPlayers;
- (id)gkCollectionView;
- (id)currentPlayerIDs;
- (void)finishWithError:(id)arg1;
- (id)matchRequest;
- (id)alert;
- (void)setAlert:(id)arg1;
- (void)cancelAlertWithoutDelegateCallback;
- (void)friendPickerViewController:(id)arg1 didFinishWithPlayers:(id)arg2 inviteMessage:(id)arg3;
- (id)inviteButton;
- (void)setInfoLabel:(id)arg1;
- (id)infoLabel;
- (BOOL)setupNotifications;
- (void)setStatus:(int)arg1;
- (id)init;
- (void)dealloc;
- (int)collectionView:(id)arg1 numberOfItemsInSection:(int)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (id)collectionView:(id)arg1 viewForSupplementaryElementOfKind:(id)arg2 atIndexPath:(id)arg3;
- (int)numberOfSectionsInCollectionView:(id)arg1;
- (void)willRotateToInterfaceOrientation:(int)arg1 duration:(double)arg2;
- (void)viewDidDisappear:(BOOL)arg1;
- (void)viewWillAppear:(BOOL)arg1;
- (void)loadView;
- (BOOL)shouldAutorotateToInterfaceOrientation:(int)arg1;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(int)arg2;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (int)status;

@end
