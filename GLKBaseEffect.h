/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator6.0.sdk/System/Library/Frameworks/GLKit.framework/GLKit
 */

@class NSArray, GLKEffectPropertyConstantColor, GLKEffectPropertyMaterial, GLKEffect, NSMutableArray, GLKEffectPropertyFog, GLKEffectPropertyTransform, NSString, GLKEffectPropertyTexture, GLKEffectPropertyLight;

@interface GLKBaseEffect : NSObject <GLKNamedEffect> {
    unsigned char _colorMaterialEnabled;
    unsigned char _fogEnabled;
    GLKEffectPropertyTransform *_transform;
    int _lightingType;
    GLKEffectPropertyLight *_light0;
    GLKEffectPropertyLight *_light1;
    GLKEffectPropertyLight *_light2;
    GLKEffectPropertyMaterial *_material;
    GLKEffectPropertyTexture *_texture2d0;
    GLKEffectPropertyTexture *_texture2d1;
    NSArray *_textureOrder;
    union _GLKVector4 { 
        struct { 
            float x; 
            float y; 
            float z; 
            float w; 
        } ; 
        struct { 
            float r; 
            float g; 
            float b; 
            float a; 
        } ; 
        struct { 
            float s; 
            float t; 
            float p; 
            float q; 
        } ; 
        float v[4]; 
    } _constantColor;
    GLKEffectPropertyFog *_fog;
    NSString *_label;
    unsigned char _lightModelTwoSided;
    union _GLKVector4 { 
        struct { 
            float x; 
            float y; 
            float z; 
            float w; 
        } ; 
        struct { 
            float r; 
            float g; 
            float b; 
            float a; 
        } ; 
        struct { 
            float s; 
            float t; 
            float p; 
            float q; 
        } ; 
        float v[4]; 
    } _lightModelAmbientColor;
    GLKEffectPropertyConstantColor *_constantColorProp;
    unsigned char _useConstantColor;
    unsigned char _propertyArrayStale;
    NSMutableArray *_propertyArray;
    unsigned char _effectStale;
    GLKEffect *_effect;
    unsigned int _programName;
}

@property unsigned char colorMaterialEnabled;
@property unsigned char lightModelTwoSided;
@property unsigned char useConstantColor;
@property(readonly) GLKEffectPropertyTransform * transform;
@property(readonly) GLKEffectPropertyLight * light0;
@property(readonly) GLKEffectPropertyLight * light1;
@property(readonly) GLKEffectPropertyLight * light2;
@property int lightingType;
@property union _GLKVector4 { struct { float x_1_1_1; float x_1_1_2; float x_1_1_3; float x_1_1_4; } x1; struct { float x_2_1_1; float x_2_1_2; float x_2_1_3; float x_2_1_4; } x2; struct { float x_3_1_1; float x_3_1_2; float x_3_1_3; float x_3_1_4; } x3; float x4[4]; } lightModelAmbientColor;
@property(readonly) GLKEffectPropertyMaterial * material;
@property(readonly) GLKEffectPropertyTexture * texture2d0;
@property(readonly) GLKEffectPropertyTexture * texture2d1;
@property(retain) NSArray * textureOrder;
@property union _GLKVector4 { struct { float x_1_1_1; float x_1_1_2; float x_1_1_3; float x_1_1_4; } x1; struct { float x_2_1_1; float x_2_1_2; float x_2_1_3; float x_2_1_4; } x2; struct { float x_3_1_1; float x_3_1_2; float x_3_1_3; float x_3_1_4; } x3; float x4[4]; } constantColor;
@property(readonly) GLKEffectPropertyFog * fog;
@property(retain) NSString * label;
@property(readonly) NSMutableArray * propertyArray;
@property unsigned char effectStale;
@property unsigned char propertyArrayStale;
@property GLKEffect * effect;
@property unsigned int programName;
@property(readonly) GLKEffectPropertyConstantColor * constantColorProp;


- (void)setProgramName:(unsigned int)arg1;
- (unsigned int)programName;
- (void)setEffect:(id)arg1;
- (id)effect;
- (void)setEffectStale:(unsigned char)arg1;
- (unsigned char)effectStale;
- (id)propertyArray;
- (void)setPropertyArrayStale:(unsigned char)arg1;
- (unsigned char)propertyArrayStale;
- (unsigned char)useConstantColor;
- (id)constantColorProp;
- (id)textureOrder;
- (union _GLKVector4 { struct { float x_1_1_1; float x_1_1_2; float x_1_1_3; float x_1_1_4; } x1; struct { float x_2_1_1; float x_2_1_2; float x_2_1_3; float x_2_1_4; } x2; struct { float x_3_1_1; float x_3_1_2; float x_3_1_3; float x_3_1_4; } x3; float x4[4]; })lightModelAmbientColor;
- (int)lightingType;
- (unsigned char)lightModelTwoSided;
- (unsigned char)colorMaterialEnabled;
- (BOOL)perPixelLightingEnabled;
- (BOOL)perVertexLightingEnabled;
- (void)setUseConstantColor:(unsigned char)arg1;
- (union _GLKVector4 { struct { float x_1_1_1; float x_1_1_2; float x_1_1_3; float x_1_1_4; } x1; struct { float x_2_1_1; float x_2_1_2; float x_2_1_3; float x_2_1_4; } x2; struct { float x_3_1_1; float x_3_1_2; float x_3_1_3; float x_3_1_4; } x3; float x4[4]; })constantColor;
- (void)setConstantColor:(union _GLKVector4 { struct { float x_1_1_1; float x_1_1_2; float x_1_1_3; float x_1_1_4; } x1; struct { float x_2_1_1; float x_2_1_2; float x_2_1_3; float x_2_1_4; } x2; struct { float x_3_1_1; float x_3_1_2; float x_3_1_3; float x_3_1_4; } x3; float x4[4]; })arg1;
- (void)prepareToDraw;
- (id)fog;
- (id)texture2d1;
- (id)texture2d0;
- (id)light2;
- (id)light1;
- (id)light0;
- (void)updateBaseEffect;
- (void)setTextureOrder:(id)arg1;
- (void)setLightingType:(int)arg1;
- (void)setLightModelTwoSided:(unsigned char)arg1;
- (void)setColorMaterialEnabled:(unsigned char)arg1;
- (void)setLightModelAmbientColor:(union _GLKVector4 { struct { float x_1_1_1; float x_1_1_2; float x_1_1_3; float x_1_1_4; } x1; struct { float x_2_1_1; float x_2_1_2; float x_2_1_3; float x_2_1_4; } x2; struct { float x_3_1_1; float x_3_1_2; float x_3_1_3; float x_3_1_4; } x3; float x4[4]; })arg1;
- (id)material;
- (id)transform;
- (id)init;
- (void)dealloc;
- (id)description;
- (id)label;
- (void)setLabel:(id)arg1;

@end
