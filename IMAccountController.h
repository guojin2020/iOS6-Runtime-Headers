/* Generated by RuntimeBrowser.
   Image: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator6.0.sdk/System/Library/PrivateFrameworks/IMCore.framework/IMCore
 */

@class NSArray, NSMutableArray, NSMutableDictionary;

@interface IMAccountController : NSObject  {
    NSMutableArray *_accounts;
    NSMutableDictionary *_accountMap;
    BOOL _isReadOnly;
    BOOL _cachesEnabled;
    NSMutableDictionary *_serviceToActiveAccountsMap;
    NSMutableDictionary *_serviceToAccountsMap;
    NSMutableDictionary *_serviceToConnectedAccountsMap;
    NSMutableDictionary *_serviceToOperationalAccountsMap;
}

@property(readonly) int numberOfAccounts;
@property(readonly) NSArray * accounts;
@property(readonly) NSArray * activeAccounts;
@property(readonly) NSArray * connectedAccounts;
@property(readonly) NSArray * operationalAccounts;
@property(readonly) NSMutableArray * _accounts;
@property(readonly) id bestAccountForStatus;

+ (id)bestAccountFromAccounts:(id)arg1;
+ (id)sharedInstance;

- (BOOL)activateAccount:(id)arg1;
- (id)_accounts;
- (int)numberOfAccounts;
- (id)_serviceAgentConnectedAccounts;
- (id)__iCloudSystemAccountForService:(id)arg1;
- (id)_bestOperationalAccountForSendingForService:(id)arg1;
- (void)_disableCache;
- (void)_enableCache;
- (id)jabberAccount;
- (id)aimAccount;
- (id)mostLoggedInAccount;
- (id)bestAccountWithCapability:(unsigned long long)arg1;
- (id)bestConnectedAccountForService:(id)arg1;
- (id)bestOperationalAccountForService:(id)arg1;
- (id)bestAccountForService:(id)arg1 login:(id)arg2 guid:(id)arg3;
- (BOOL)accountConnected:(id)arg1;
- (BOOL)accountConnecting:(id)arg1;
- (BOOL)activateAndHandleReconnectAccount:(id)arg1;
- (BOOL)activateAccount:(id)arg1 force:(BOOL)arg2;
- (BOOL)addAccount:(id)arg1 atIndex:(int)arg2 locally:(BOOL)arg3;
- (BOOL)addAccount:(id)arg1 atIndex:(int)arg2;
- (BOOL)canDeleteAccount:(id)arg1;
- (id)accountAtIndex:(int)arg1;
- (id)bestAccountForService:(id)arg1;
- (id)bestActiveAccountForService:(id)arg1;
- (id)bestAccountForService:(id)arg1 withLogin:(id)arg2;
- (id)operationalAccountsForService:(id)arg1;
- (id)bestActiveAccountForService:(id)arg1 withLogin:(id)arg2;
- (id)bestOperationalAccountForService:(id)arg1 withLogin:(id)arg2;
- (id)bestConnectedAccountForService:(id)arg1 withLogin:(id)arg2;
- (BOOL)canActivateAccount:(id)arg1;
- (BOOL)activateAndHandleReconnectAccounts:(id)arg1;
- (BOOL)activateAccount:(id)arg1 force:(BOOL)arg2 locally:(BOOL)arg3;
- (BOOL)activateAccounts:(id)arg1 force:(BOOL)arg2 locally:(BOOL)arg3;
- (BOOL)canActivateAccounts:(id)arg1;
- (BOOL)deactivateAccounts:(id)arg1 withDisable:(BOOL)arg2;
- (id)operationalAccounts;
- (id)activeAccounts;
- (BOOL)accountActive:(id)arg1;
- (void)_activeAccountChanged:(id)arg1;
- (BOOL)deactivateAccounts:(id)arg1;
- (BOOL)activateAccounts:(id)arg1;
- (BOOL)deactivateAccount:(id)arg1 withDisable:(BOOL)arg2;
- (BOOL)deleteAccount:(id)arg1 locally:(BOOL)arg2;
- (BOOL)addAccount:(id)arg1 locally:(BOOL)arg2;
- (BOOL)deactivateAccount:(id)arg1;
- (BOOL)activateAccount:(id)arg1 locally:(BOOL)arg2;
- (id)connectedAccounts;
- (id)bestAccountForStatus;
- (void)autoLogin;
- (id)accounts;
- (BOOL)addAccount:(id)arg1;
- (id)accountForUniqueID:(id)arg1;
- (id)accountsForService:(id)arg1;
- (id)operationalAccountsWithCapability:(unsigned long long)arg1;
- (id)connectedAccountsWithCapability:(unsigned long long)arg1;
- (id)accountsWithCapability:(unsigned long long)arg1;
- (id)connectedAccountsForService:(id)arg1;
- (id)activeAccountsForService:(id)arg1;
- (BOOL)deleteAccount:(id)arg1;
- (void)setReadOnly:(BOOL)arg1;
- (id)init;
- (void)dealloc;
- (BOOL)readOnly;

@end
